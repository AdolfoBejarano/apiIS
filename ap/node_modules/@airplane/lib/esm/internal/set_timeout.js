/**
 * setTimeoutWithCancel returns a Promise that resolves after the provided Date or duration (in milliseconds).
 *
 * The returned Promise will resolve sooner if the provided AbortController resolves earlier.
 */
export const setTimeoutWithCancel = async (until, controller) => {
    return new Promise((resolve) => {
        const onDone = () => {
            if (timeout) {
                clearTimeout(timeout);
            }
            controller.signal.removeEventListener("abort", onDone);
            resolve();
        };
        // Convert `until` into a duration in milliseconds.
        const now = new Date();
        const durationMs = typeof until === "number" ? until : Math.max(0, until.getTime() - now.getTime());
        const timeout = setTimeout(onDone, durationMs);
        controller.signal.addEventListener("abort", onDone);
        if (controller.signal.aborted) {
            onDone();
        }
    });
};
