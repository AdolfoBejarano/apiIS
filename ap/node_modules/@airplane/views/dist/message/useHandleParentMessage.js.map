{"version":3,"file":"useHandleParentMessage.js","sources":["../../src/message/useHandleParentMessage.ts"],"sourcesContent":["import { useQueryClient } from \"@tanstack/react-query\";\nimport { useEffect } from \"react\";\n\nimport { WEB_HOST_GET } from \"client/endpoints\";\nimport { Fetcher } from \"client/fetcher\";\nimport { ParentMessage } from \"message/ParentMessage\";\n\n/**\n * useHandleParentMessage is a hook that allows you to listen for messages sent from the parent frame.\n */\nexport const useHandleParentMessage = (\n  callback: (message: ParentMessage) => void,\n) => {\n  const queryClient = useQueryClient();\n\n  useEffect(() => {\n    const handleMessage = async (message: MessageEvent<ParentMessage>) => {\n      const fetcher = new Fetcher();\n      const webHost = await queryClient.fetchQuery(\n        [WEB_HOST_GET],\n        async () => {\n          return await fetcher.get<string>(WEB_HOST_GET, {});\n        },\n        { staleTime: Infinity },\n      );\n      if (message.origin === webHost) {\n        callback(message.data);\n      }\n    };\n    window.addEventListener(\"message\", handleMessage);\n    return () => {\n      window.removeEventListener(\"message\", handleMessage);\n    };\n  }, [queryClient, callback]);\n};\n"],"names":["useHandleParentMessage","callback","queryClient","useQueryClient","useEffect","handleMessage","message","fetcher","Fetcher","webHost","fetchQuery","WEB_HOST_GET","get","staleTime","Infinity","origin","data","addEventListener","removeEventListener"],"mappings":";;;;AAUaA,MAAAA,yBAAyBA,CACpCC,aACG;AACH,QAAMC,cAAcC;AAEpBC,YAAU,MAAM;AACRC,UAAAA,gBAAgB,OAAOC,YAAyC;AAC9DC,YAAAA,UAAU,IAAIC;AACpB,YAAMC,UAAU,MAAMP,YAAYQ,WAChC,CAACC,YAAY,GACb,YAAY;AACV,eAAO,MAAMJ,QAAQK,IAAYD,cAAc,CAAE,CAAA;AAAA,MAAA,GAEnD;AAAA,QAAEE,WAAWC;AAAAA,MAAAA,CACf;AACIR,UAAAA,QAAQS,WAAWN,SAAS;AAC9BR,iBAASK,QAAQU,IAAI;AAAA,MACvB;AAAA,IAAA;AAEKC,WAAAA,iBAAiB,WAAWZ,aAAa;AAChD,WAAO,MAAM;AACJa,aAAAA,oBAAoB,WAAWb,aAAa;AAAA,IAAA;AAAA,EACrD,GACC,CAACH,aAAaD,QAAQ,CAAC;AAC5B;"}