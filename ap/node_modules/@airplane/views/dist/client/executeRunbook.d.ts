import type { ParamValues } from "airplane/api";
import type { ExecuteError } from "../components/query";
export type ExecuteRunbookSuccess = {
    sessionID: string;
};
export type ExecuteRunbookError = {
    error: ExecuteError;
    sessionID?: string;
};
export type ExecuteRunbookResult = ExecuteRunbookSuccess | ExecuteRunbookError;
export declare const executeRunbook: <TParams extends ParamValues | undefined = ParamValues>(slug: string, executeType?: "query" | "mutation", params?: TParams | undefined) => Promise<ExecuteRunbookResult>;
export declare function isExecuteRunbookError(value: ExecuteRunbookResult): value is ExecuteRunbookError;
