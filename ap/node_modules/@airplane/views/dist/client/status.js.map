{"version":3,"file":"status.js","sources":["../../src/client/status.ts"],"sourcesContent":["import type { RunStatus, SessionStatus } from \"airplane/api\";\n\nexport const isStatusTerminal = (\n  status?: RunStatus | SessionStatus,\n): boolean => {\n  // Note that the terminal run and session statuses happen to be the same,\n  // so we can get away with this, but we should probably be careful whether\n  // this continues to be true in the future.\n  switch (status) {\n    case \"Succeeded\":\n    case \"Failed\":\n    case \"Cancelled\":\n      return true;\n    default:\n      return false;\n  }\n};\n\ninterface GenericExecuteError {\n  message: string;\n  statusCode: number;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const isGenericExecuteError = (x: any): x is GenericExecuteError => {\n  return typeof x.message === \"string\";\n};\n"],"names":["isGenericExecuteError","x","message"],"mappings":"AAwBaA,MAAAA,wBAAwBA,CAACC,MAAqC;AAClE,SAAA,OAAOA,EAAEC,YAAY;AAC9B;"}