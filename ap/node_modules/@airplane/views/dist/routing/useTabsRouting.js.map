{"version":3,"file":"useTabsRouting.js","sources":["../../src/routing/useTabsRouting.ts"],"sourcesContent":["import { useCallback } from \"react\";\n\nimport { useRouter } from \"./useRouter\";\n\n/**\n * useTabsRouting is an internal hook that makes the Tab read and write to the tab state encoded in the URL.\n */\nexport const useTabsRouting = (\n  routingKey: string | null,\n): {\n  routerValue: string | undefined;\n  navigateTab: (tabValue: string) => void;\n} => {\n  const router = useRouter();\n  const routerValue = routingKey ? router.params[routingKey] : undefined;\n\n  const navigateTab = useCallback(\n    (tabValue: string) => {\n      if (routingKey) {\n        router.navigate({\n          params: {\n            ...router.params,\n            [routingKey]: tabValue,\n          },\n        });\n      }\n    },\n    [router, routingKey],\n  );\n\n  return {\n    routerValue,\n    navigateTab,\n  };\n};\n"],"names":["useTabsRouting","routingKey","router","useRouter","routerValue","params","undefined","navigateTab","useCallback","tabValue","navigate"],"mappings":";;AAOaA,MAAAA,iBAAiBA,CAC5BC,eAIG;AACH,QAAMC,SAASC;AACf,QAAMC,cAAcH,aAAaC,OAAOG,OAAOJ,UAAU,IAAIK;AAEvDC,QAAAA,cAAcC,YAClB,CAACC,aAAqB;AACpB,QAAIR,YAAY;AACdC,aAAOQ,SAAS;AAAA,QACdL,QAAQ;AAAA,UACN,GAAGH,OAAOG;AAAAA,UACV,CAACJ,UAAU,GAAGQ;AAAAA,QAChB;AAAA,MAAA,CACD;AAAA,IACH;AAAA,EAAA,GAEF,CAACP,QAAQD,UAAU,CACrB;AAEO,SAAA;AAAA,IACLG;AAAAA,IACAG;AAAAA,EAAAA;AAEJ;"}