{"version":3,"file":"Button.js","sources":["../../../src/components/button/Button.tsx"],"sourcesContent":["import { Button as MantineButton } from \"@mantine/core\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport type { RunStatus, SessionStatus } from \"airplane/api\";\nimport * as React from \"react\";\nimport {\n  forwardRef,\n  MouseEvent,\n  ReactElement,\n  Ref,\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport { DefaultOutput, DefaultParams, ParamValues } from \"client\";\nimport { PERMISSIONS_GET } from \"client/endpoints\";\nimport { Fetcher } from \"client/fetcher\";\nimport { ConfirmationComponent } from \"components/dialog/Confirmation\";\nimport { ComponentErrorBoundary } from \"components/errorBoundary/ComponentErrorBoundary\";\nimport { ArrowTopRightOnSquareIconMini } from \"components/icon\";\nimport { useCommonLayoutStyle } from \"components/layout/useCommonLayoutStyle\";\nimport { showNotification } from \"components/notification/showNotification\";\nimport { showRunnableErrorNotification } from \"components/notification/showRunnableErrorNotification\";\nimport { RequestRunnableDialog } from \"components/requestDialog/RequestRunnableDialog\";\nimport { Text } from \"components/text/Text\";\nimport { Color } from \"components/theme/colors\";\nimport { Tooltip } from \"components/tooltip/Tooltip\";\nimport { useRouter } from \"routing\";\nimport { useButtonState } from \"state/components/button\";\nimport { useComponentId } from \"state/components/useId\";\nimport {\n  RunbookMutationState,\n  useRunbookMutation,\n} from \"state/tasks/useRunbookMutation\";\nimport { MutationState, useTaskMutation } from \"state/tasks/useTaskMutation\";\n\nimport { useStyles } from \"./Button.styles\";\nimport {\n  ButtonComponentBaseProps,\n  ButtonComponentButtonProps,\n  ButtonComponentLinkProps,\n  ButtonComponentProps,\n  ButtonConfirmOptions,\n  ButtonPreset,\n  ButtonProps,\n  ButtonPropsWithRunbook,\n  ButtonPropsWithTask,\n  ButtonVariant,\n} from \"./Button.types\";\nimport {\n  ExecuteError,\n  getFullMutation,\n  getRunbookFullMutation,\n  getSlug,\n} from \"../query\";\n\n/**\n * ButtonC is around to support generics with React.forwardRef.\n * See https://stackoverflow.com/a/58473012 for more info\n */\nconst ButtonC = <\n  TParams extends ParamValues | undefined = DefaultParams,\n  TOutput = DefaultOutput,\n>(\n  props: ButtonProps<TParams, TOutput>,\n  ref: Ref<\n    typeof props extends ButtonComponentLinkProps\n      ? HTMLAnchorElement\n      : HTMLButtonElement\n  >,\n) => (\n  <ComponentErrorBoundary componentName={\"Button\"}>\n    <ButtonWithoutRef {...props} innerRef={ref} />\n  </ComponentErrorBoundary>\n);\n\nexport const Button = forwardRef(ButtonC) as <\n  TParams extends ParamValues | undefined = DefaultParams,\n  TOutput = DefaultOutput,\n>(\n  props: ButtonProps<TParams, TOutput> & {\n    ref?: Ref<HTMLAnchorElement | HTMLButtonElement>;\n  },\n) => ReactElement;\n\nexport function ButtonWithoutRef<\n  TParams extends ParamValues | undefined = DefaultParams,\n  TOutput = DefaultOutput,\n>(\n  props: ButtonProps<TParams, TOutput> & {\n    innerRef: React.Ref<HTMLAnchorElement | HTMLButtonElement>;\n  },\n) {\n  const id = useComponentId(props.id);\n  const { setResult } = useButtonState(id);\n  if (doesUseTask<TParams, TOutput>(props)) {\n    return <ButtonWithTask {...props} setResult={setResult} />;\n  } else if (doesUseRunbook<TParams>(props)) {\n    return <ButtonWithRunbook {...props} setResult={setResult} />;\n  } else {\n    const { innerRef, ...restProps } = props;\n    return <ButtonComponent ref={innerRef} {...restProps} />;\n  }\n}\n\n/**\n * UnconnectedButton is a task-aware button that is not connected to the global component state.\n *\n * This should be used sparingly - mostly for buttons that are created dynamically within other components.\n * */\nexport function UnconnectedButton<\n  TParams extends ParamValues | undefined = DefaultParams,\n  TOutput = DefaultOutput,\n>(props: ButtonProps<TParams, TOutput>) {\n  if (doesUseTask<TParams, TOutput>(props)) {\n    return <ButtonWithTask {...props} />;\n  } else if (doesUseRunbook<TParams>(props)) {\n    return <ButtonWithRunbook {...props} />;\n  } else {\n    return <ButtonComponent {...props} />;\n  }\n}\n\n/**\n * ButtonWithTask is a button that executes a task on click.\n */\nconst ButtonWithTask = <\n  TParams extends ParamValues | undefined = DefaultParams,\n  TOutput = DefaultOutput,\n>({\n  innerRef,\n  setResult,\n  confirm,\n  onClick,\n  style,\n  ...restProps\n}: ButtonPropsWithTask<TParams, TOutput> & {\n  setResult?: (result: MutationState<TOutput>) => void;\n} & {\n  innerRef?: React.Ref<HTMLButtonElement>;\n}) => {\n  const fullMutation = getFullMutation<TParams>(restProps.task);\n  const slug = getSlug(fullMutation);\n  const [dialogOpened, setDialogOpened] = React.useState(false);\n\n  const { onSuccess: fullMutationOnSuccess, onError: fullMutationOnError } =\n    fullMutation ?? {};\n\n  const onSuccess = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (output: any, runID: string) => {\n      setResult?.({ output, runID });\n      fullMutationOnSuccess?.(output, runID);\n      showNotification({\n        title: `Successful run`,\n        message: slug,\n        type: \"success\",\n      });\n    },\n    [setResult, fullMutationOnSuccess, slug],\n  );\n  const onError = useCallback(\n    (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      output: any,\n      error: ExecuteError,\n      runID?: string,\n      status?: RunStatus,\n    ) => {\n      setResult?.({ output, error, runID });\n      fullMutationOnError?.(output, error, runID);\n      showRunnableErrorNotification({ error, runID, slug });\n    },\n    [setResult, fullMutationOnError, slug],\n  );\n\n  const { mutate, loading } = useTaskMutation<TParams, TOutput>({\n    ...fullMutation,\n    onSuccess,\n    onError,\n  });\n\n  const { data, status } = useQuery([PERMISSIONS_GET, slug], async () => {\n    const fetcher = new Fetcher();\n    return await fetcher.get<{ resource: Record<string, boolean> }>(\n      PERMISSIONS_GET,\n      {\n        task_slug: slug,\n        actions: [\"tasks.execute\", \"tasks.request_run\"],\n      },\n    );\n  });\n  const { canExecute, canRequest, disabled } = processPermissionsQueryResult(\n    status,\n    data?.resource[\"tasks.execute\"],\n    data?.resource[\"tasks.request_run\"],\n  );\n  const confirmOptions = processConfirm(confirm, slug);\n\n  const newOnClick = useCallback(\n    (e: MouseEvent<HTMLButtonElement>) => {\n      if (status === \"error\" || canExecute) {\n        mutate();\n      } else if (canRequest) {\n        setDialogOpened(true);\n      }\n      onClick?.(e);\n    },\n    [status, canExecute, canRequest, mutate, onClick],\n  );\n\n  // If the tooltip is shown, make sure to enable pointer events, otherwise the text will not be\n  // visible.\n  if (disabled) {\n    if (style) {\n      style.pointerEvents = \"all\";\n    } else {\n      style = { pointerEvents: \"all\" };\n    }\n  }\n\n  return (\n    <>\n      <Tooltip\n        label={\n          status === \"success\"\n            ? \"Missing request and execute permissions\"\n            : \"Loading permissions...\"\n        }\n        position=\"bottom-start\"\n        disabled={!disabled}\n      >\n        <ButtonComponent\n          ref={innerRef}\n          disabled={disabled}\n          loading={loading}\n          onClick={newOnClick}\n          confirm={canExecute && confirmOptions}\n          style={style}\n          {...restProps}\n        />\n      </Tooltip>\n      <RequestRunnableDialog\n        opened={dialogOpened}\n        onSubmit={() => setDialogOpened(false)}\n        onClose={() => setDialogOpened(false)}\n        taskSlug={slug}\n        paramValues={fullMutation.params || {}}\n      />\n    </>\n  );\n};\n\n/**\n * ButtonWithRunbook is a button that executes a runbook on click.\n */\nconst ButtonWithRunbook = <\n  TParams extends ParamValues | undefined = DefaultParams,\n>({\n  innerRef,\n  setResult,\n  confirm,\n  onClick,\n  ...restProps\n}: ButtonPropsWithRunbook<TParams> & {\n  setResult?: (result: RunbookMutationState) => void;\n} & {\n  innerRef?: React.Ref<HTMLButtonElement>;\n}) => {\n  const fullMutation = getRunbookFullMutation<TParams>(restProps.runbook);\n  const slug = fullMutation.slug;\n  const [dialogOpened, setDialogOpened] = React.useState(false);\n\n  const { onSuccess: fullMutationOnSuccess, onError: fullMutationOnError } =\n    fullMutation ?? {};\n\n  const onSuccess = useCallback(\n    (sessionID: string) => {\n      setResult?.({\n        sessionID,\n      });\n      fullMutationOnSuccess?.(sessionID);\n      showNotification({\n        title: `Successful session`,\n        message: slug,\n        type: \"success\",\n      });\n    },\n    [setResult, fullMutationOnSuccess, slug],\n  );\n  const onError = useCallback(\n    (error: ExecuteError, sessionID?: string, status?: SessionStatus) => {\n      setResult?.({ error, sessionID });\n      fullMutationOnError?.(error, sessionID);\n      showRunnableErrorNotification({ error, sessionID, slug });\n    },\n    [setResult, fullMutationOnError, slug],\n  );\n\n  const { mutate, loading } = useRunbookMutation<TParams>({\n    ...fullMutation,\n    onSuccess,\n    onError,\n  });\n\n  const { data, status } = useQuery([PERMISSIONS_GET, slug], async () => {\n    const fetcher = new Fetcher();\n    return await fetcher.get<{ resource: Record<string, boolean> }>(\n      PERMISSIONS_GET,\n      {\n        runbook_slug: slug,\n        actions: [\"runbooks.execute\", \"trigger_requests.create\"],\n      },\n    );\n  });\n  const { canExecute, canRequest, disabled } = processPermissionsQueryResult(\n    status,\n    data?.resource[\"runbooks.execute\"],\n    data?.resource[\"trigger_requests.create\"],\n  );\n  const confirmOptions = processConfirm(confirm, slug);\n\n  const newOnClick = useCallback(\n    (e: MouseEvent<HTMLButtonElement>) => {\n      if (status === \"error\" || canExecute) {\n        mutate();\n      } else if (canRequest) {\n        setDialogOpened(true);\n      }\n      onClick?.(e);\n    },\n    [status, canExecute, canRequest, mutate, onClick],\n  );\n\n  return (\n    <>\n      <Tooltip\n        label={\n          status === \"success\"\n            ? \"Missing request and execute permissions\"\n            : \"Loading permissions...\"\n        }\n        wrapper=\"div\"\n        position=\"bottom-start\"\n        disabled={!disabled}\n      >\n        <ButtonComponent\n          ref={innerRef}\n          disabled={disabled}\n          loading={loading}\n          onClick={newOnClick}\n          confirm={canExecute && confirmOptions}\n          {...restProps}\n        />\n      </Tooltip>\n      <RequestRunnableDialog\n        opened={dialogOpened}\n        onSubmit={() => setDialogOpened(false)}\n        onClose={() => setDialogOpened(false)}\n        runbookSlug={slug}\n        paramValues={fullMutation.params || {}}\n      />\n    </>\n  );\n};\n\n/**\n * Presentational button component\n */\nexport const ButtonComponent = forwardRef<\n  HTMLAnchorElement | HTMLButtonElement,\n  ButtonComponentProps\n>(\n  (\n    {\n      preset = \"primary\",\n      leftAlign,\n      disableFocusRing,\n      width,\n      height,\n      grow,\n      className,\n      style,\n      ...props\n    }: ButtonComponentProps,\n    ref,\n  ) => {\n    const [showConfirmation, setShowConfirmation] = useState(false);\n    const [clickEvent, setClickEvent] = useState<\n      MouseEvent<HTMLButtonElement> | undefined\n    >();\n\n    const presetStyle = buttonPreset[preset];\n    const variant = props.variant || presetStyle.variant;\n    const color = props.color || presetStyle.color;\n    const { classes, cx } = useStyles({ color, variant });\n    const { classes: layoutClasses } = useCommonLayoutStyle({\n      width,\n      height,\n      grow,\n    });\n\n    const onClickWithConfirmation = useCallback(\n      (e: MouseEvent<HTMLButtonElement>) => {\n        if (!isButton(props)) {\n          return;\n        }\n        const onClick = props.onClick;\n        if (props.confirm) {\n          setShowConfirmation(true);\n          setClickEvent(e);\n          const confirmOptions =\n            typeof props.confirm === \"boolean\" ? {} : props.confirm;\n          confirmOptions.onClick?.(e);\n        } else {\n          onClick?.(e);\n        }\n        if (props.stopPropagation) {\n          e.stopPropagation();\n        }\n      },\n      [props],\n    );\n\n    if (isAnchor(props)) {\n      return (\n        <LinkButtonComponent\n          ref={ref as React.Ref<HTMLAnchorElement>}\n          leftAlign={leftAlign}\n          disableFocusRing={disableFocusRing}\n          width={width}\n          height={height}\n          grow={grow}\n          className={className}\n          style={style}\n          {...props}\n          color={color}\n          variant={variant}\n        />\n      );\n    } else if (isButton(props)) {\n      const { confirm, ...rest } = props;\n      const confirmOptions = typeof confirm === \"boolean\" ? {} : confirm;\n      if (confirmOptions && !confirmOptions.body && !confirmOptions.title) {\n        confirmOptions.title = \"Are you sure?\";\n      }\n      return (\n        <>\n          <MantineButton\n            component=\"button\"\n            ref={ref as React.Ref<HTMLButtonElement>}\n            {...rest}\n            loaderPosition=\"center\"\n            onClick={onClickWithConfirmation}\n            color={color}\n            variant={variant}\n            className={cx(layoutClasses.style, className)}\n            style={style}\n            classNames={{\n              root: cx({\n                [classes.disableFocusRing]: disableFocusRing,\n                [classes.recolorRoot]: !disableFocusRing,\n              }),\n              inner: cx({ [classes.leftAlign]: leftAlign }),\n            }}\n          />\n          <ConfirmationComponent\n            opened={showConfirmation}\n            onClose={() => setShowConfirmation(false)}\n            onConfirm={() => {\n              setShowConfirmation(false);\n              props.onClick?.(clickEvent!);\n              setClickEvent(undefined);\n            }}\n            cancelText={confirmOptions?.cancelText}\n            confirmText={confirmOptions?.confirmText}\n            title={confirmOptions?.title}\n          >\n            {confirmOptions?.body ?? null}\n          </ConfirmationComponent>\n        </>\n      );\n    }\n    return null;\n  },\n);\nButtonComponent.displayName = \"ButtonComponent\";\n\n/**\n * Link Presentational button component\n */\nconst LinkButtonComponent = forwardRef<\n  HTMLAnchorElement,\n  ButtonComponentLinkProps\n>(\n  (\n    {\n      href,\n      newTab,\n      target: userTarget,\n      disabled,\n      color,\n      variant,\n      leftAlign,\n      disableFocusRing,\n      width,\n      height,\n      grow,\n      className,\n      style,\n      ...props\n    }: ButtonComponentLinkProps,\n    ref,\n  ) => {\n    const { classes, cx } = useStyles({ color, variant });\n    const { classes: layoutClasses } = useCommonLayoutStyle({\n      width,\n      height,\n      grow,\n    });\n\n    const [buttonHref, setButtonHref] = useState(() =>\n      typeof href === \"string\" ? href : \"\",\n    );\n    const { getHref } = useRouter();\n    useEffect(() => {\n      const getButtonHref = async () => {\n        if (typeof href !== \"string\") {\n          const rhr = await getHref(href);\n          setButtonHref(rhr);\n        } else {\n          setButtonHref(href);\n        }\n      };\n      getButtonHref();\n    }, [href, getHref]);\n\n    const targetNewTab = newTab == null ? true : newTab;\n    const target = userTarget ?? targetNewTab ? \"_blank\" : \"_top\";\n\n    return (\n      <MantineButton\n        className={cx(layoutClasses.style, className)}\n        style={style}\n        classNames={{\n          root: cx({\n            [classes.disableFocusRing]: disableFocusRing,\n            [classes.recolorRoot]: !disableFocusRing,\n          }),\n          inner: cx({ [classes.leftAlign]: leftAlign }),\n        }}\n        variant={variant}\n        color={color}\n        component=\"a\"\n        ref={ref}\n        target={target}\n        rightIcon={\n          target === \"_blank\" ? <ArrowTopRightOnSquareIconMini /> : undefined\n        }\n        href={buttonHref}\n        disabled={!buttonHref || disabled}\n        {...props}\n        loaderPosition=\"center\"\n      />\n    );\n  },\n);\nLinkButtonComponent.displayName = \"LinkButtonComponent\";\n\nconst isAnchor = (\n  props: ButtonComponentProps,\n): props is ButtonComponentBaseProps &\n  ButtonComponentLinkProps & {\n    innerRef?: React.Ref<HTMLAnchorElement>;\n  } => {\n  return !!(props as ButtonComponentLinkProps).href;\n};\n\nconst isButton = (\n  props: ButtonComponentProps,\n): props is ButtonComponentBaseProps &\n  ButtonComponentButtonProps & {\n    innerRef?: React.Ref<HTMLButtonElement>;\n  } => {\n  return !(props as ButtonComponentLinkProps).href;\n};\n\nfunction doesUseTask<TParams extends ParamValues | undefined, TOutput>(\n  props: ButtonProps<TParams, TOutput>,\n): props is ButtonPropsWithTask<TParams, TOutput> & {\n  innerRef: React.Ref<HTMLButtonElement>;\n} {\n  return Boolean((props as ButtonPropsWithTask<TParams, TOutput>).task);\n}\n\nfunction doesUseRunbook<TParams extends ParamValues | undefined>(\n  props: ButtonProps<TParams>,\n): props is ButtonPropsWithRunbook<TParams> & {\n  innerRef: React.Ref<HTMLButtonElement>;\n} {\n  return Boolean((props as ButtonPropsWithRunbook<TParams>).runbook);\n}\n\nfunction processConfirm(\n  confirm: undefined | boolean | ButtonConfirmOptions,\n  slug: string,\n): undefined | ButtonConfirmOptions {\n  const confirmOptions = typeof confirm === \"boolean\" ? {} : confirm;\n  if (confirmOptions) {\n    if (confirmOptions.body === undefined) {\n      confirmOptions.body = (\n        <Text>\n          Are you sure you want to run <b>{slug}?</b>\n        </Text>\n      );\n    }\n    if (confirmOptions.title === undefined) {\n      confirmOptions.title = slug;\n    }\n    confirmOptions.confirmText = confirmOptions?.confirmText ?? \"Run\";\n  }\n  return confirmOptions;\n}\n\nfunction processPermissionsQueryResult(\n  status: string,\n  apiCanExecute: boolean | undefined,\n  apiCanRequest: boolean | undefined,\n): { canExecute: boolean; canRequest: boolean; disabled: boolean } {\n  let canExecute = false;\n  let canRequest = false;\n  if (status === \"success\") {\n    canExecute = apiCanExecute!;\n    canRequest = apiCanRequest!;\n  }\n  const disabled =\n    status === \"loading\" ||\n    (status === \"success\" && !canExecute && !canRequest);\n  return { canExecute, canRequest, disabled };\n}\n\nconst buttonPreset: Record<\n  ButtonPreset,\n  { variant: ButtonVariant; color: Color }\n> = {\n  primary: { variant: \"filled\", color: \"primary\" },\n  danger: { variant: \"filled\", color: \"error\" },\n  secondary: { variant: \"light\", color: \"primary\" },\n  tertiary: { variant: \"outline\", color: \"secondary\" },\n};\n"],"names":["ButtonC","props","ref","Button","ButtonWithoutRef","id","useComponentId","setResult","useButtonState","doesUseTask","doesUseRunbook","innerRef","restProps","UnconnectedButton","ButtonWithTask","confirm","onClick","style","fullMutation","getFullMutation","task","slug","getSlug","dialogOpened","setDialogOpened","React","useState","onSuccess","fullMutationOnSuccess","onError","fullMutationOnError","useCallback","output","runID","title","message","type","error","status","mutate","loading","useTaskMutation","data","useQuery","PERMISSIONS_GET","fetcher","Fetcher","get","task_slug","actions","canExecute","canRequest","disabled","processPermissionsQueryResult","resource","confirmOptions","processConfirm","newOnClick","e","pointerEvents","params","ButtonWithRunbook","getRunbookFullMutation","runbook","sessionID","useRunbookMutation","runbook_slug","ButtonComponent","preset","leftAlign","disableFocusRing","width","height","grow","className","showConfirmation","setShowConfirmation","clickEvent","setClickEvent","presetStyle","buttonPreset","variant","color","classes","cx","useStyles","layoutClasses","useCommonLayoutStyle","onClickWithConfirmation","isButton","stopPropagation","isAnchor","rest","body","MantineButton","root","recolorRoot","inner","undefined","cancelText","confirmText","displayName","LinkButtonComponent","href","newTab","target","userTarget","buttonHref","setButtonHref","getHref","useRouter","useEffect","getButtonHref","rhr","targetNewTab","Boolean","apiCanExecute","apiCanRequest","primary","danger","secondary","tertiary"],"mappings":"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"}