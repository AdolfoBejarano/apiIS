{"version":3,"file":"FileInput.js","sources":["../../../src/components/fileinput/FileInput.tsx"],"sourcesContent":["import { AirplaneFile } from \"airplane\";\nimport { forwardRef, Ref } from \"react\";\n\nimport { ComponentErrorBoundary } from \"components/errorBoundary/ComponentErrorBoundary\";\nimport { useCommonLayoutStyle } from \"components/layout/useCommonLayoutStyle\";\nimport { FileInputState, useFileInputState } from \"state/components/file-input\";\nimport { FileInputTValue } from \"state/components/file-input/reducer\";\nimport { useRegisterFormInput } from \"state/components/form/useRegisterFormInput\";\nimport { useInput } from \"state/components/input/useInput\";\nimport { useComponentId } from \"state/components/useId\";\n\nimport { BasicFileInputComponent } from \"./BasicFileInput\";\nimport { DropzoneFileInputComponent } from \"./DropzoneFileInput\";\nimport { FileInputProps } from \"./FileInput.types\";\n\nconst EMPTY_ARRAY: AirplaneFile[] = [];\n\nexport const FileInput = forwardRef(\n  (\n    { variant = \"dropzone\", ...restProps }: FileInputProps,\n    ref: Ref<HTMLDivElement> | Ref<HTMLButtonElement>,\n  ) => {\n    return (\n      <ComponentErrorBoundary componentName={DISPLAY_NAME}>\n        <FileInputWithoutRef\n          variant={variant}\n          {...restProps}\n          innerRef={ref as Ref<HTMLDivElement>}\n        />\n      </ComponentErrorBoundary>\n    );\n  },\n);\n\nexport const FileInputWithoutRef = ({\n  variant,\n  ...props\n}: FileInputProps & {\n  innerRef: Ref<HTMLDivElement> | Ref<HTMLButtonElement>;\n}) => {\n  const id = useComponentId(props.id);\n  const { state, dispatch } = useFileInputState(id, {\n    initialState: {\n      disabled: props.disabled ?? props.defaultDisabled,\n      initialValue: props.multiple ? EMPTY_ARRAY : undefined,\n    },\n  });\n  // newOnChange is passed to FileInputComponent, which operates on AirplaneFile[].\n  // It delegates to the user-provided onChange, and extracts the single element from\n  // the input array if in single selection mode.\n  const newOnChange: (v: AirplaneFile[]) => void = props.multiple\n    ? (v) => props.onChange?.(v)\n    : (v) => props.onChange?.(v.length ? v[0] : undefined);\n  const { inputProps } = useInput<\n    FileInputTValue,\n    FileInputState,\n    AirplaneFile[]\n  >(\n    {\n      ...props,\n      onChange: newOnChange,\n    },\n    state,\n    dispatch,\n    (v: AirplaneFile[]) => (props.multiple ? v : v.length ? v[0] : undefined),\n  );\n  useRegisterFormInput(id, \"file-input\");\n  const {\n    innerRef,\n    className,\n    style,\n    width,\n    height,\n    grow,\n    validate: _,\n    onChange: __,\n    defaultDisabled: ___,\n    ...restProps\n  } = props;\n  const { classes: layoutClasses, cx } = useCommonLayoutStyle({\n    width,\n    height,\n    grow,\n  });\n  if (variant === \"dropzone\") {\n    return (\n      <DropzoneFileInputComponent\n        ref={innerRef as Ref<HTMLDivElement>}\n        className={cx(layoutClasses.style, className)}\n        style={style}\n        {...inputProps}\n        {...restProps}\n      />\n    );\n  } else {\n    return (\n      <BasicFileInputComponent\n        ref={innerRef as Ref<HTMLButtonElement>}\n        className={cx(layoutClasses.style, className)}\n        style={style}\n        {...inputProps}\n        {...restProps}\n      />\n    );\n  }\n};\nconst DISPLAY_NAME = \"FileInput\";\nFileInput.displayName = DISPLAY_NAME;\n"],"names":["EMPTY_ARRAY","FileInput","variant","restProps","ref","DISPLAY_NAME","FileInputWithoutRef","props","id","useComponentId","state","dispatch","useFileInputState","initialState","disabled","defaultDisabled","initialValue","multiple","undefined","newOnChange","v","onChange","length","inputProps","useInput","useRegisterFormInput","innerRef","className","style","width","height","grow","validate","_","__","___","classes","layoutClasses","cx","useCommonLayoutStyle","displayName"],"mappings":";;;;;;;;;;AAeA,MAAMA,cAA8B,CAAA;AAEvBC,MAAAA,uCACX,CACE;AAAA,EAAEC,UAAU;AAAA,EAAY,GAAGC;AAA0B,GACrDC,QACG;AAED,SAAA,oBAAC,wBAAuB,EAAA,eAAeC,cACrC,UAAA,oBAAC,qBACC,EAAA,SACIF,GAAAA,WACJ,UAAUC,IAAAA,CAA2B,EAEzC,CAAA;AAEJ,CACF;AAEO,MAAME,sBAAsBA,CAAC;AAAA,EAClCJ;AAAAA,EACA,GAAGK;AAGL,MAAM;AACEC,QAAAA,KAAKC,eAAeF,MAAMC,EAAE;AAC5B,QAAA;AAAA,IAAEE;AAAAA,IAAOC;AAAAA,EAAAA,IAAaC,kBAAkBJ,IAAI;AAAA,IAChDK,cAAc;AAAA,MACZC,UAAUP,MAAMO,YAAYP,MAAMQ;AAAAA,MAClCC,cAAcT,MAAMU,WAAWjB,cAAckB;AAAAA,IAC/C;AAAA,EAAA,CACD;AAID,QAAMC,cAA2CZ,MAAMU,WAClDG,CAAMb,MAAAA;;AAAAA,uBAAMc,aAANd,+BAAiBa;AAAAA,MACvBA,CAAMb,MAAAA;;AAAAA,uBAAMc,aAANd,+BAAiBa,EAAEE,SAASF,EAAE,CAAC,IAAIF;AAAAA;AACxC,QAAA;AAAA,IAAEK;AAAAA,MAAeC,SAKrB;AAAA,IACE,GAAGjB;AAAAA,IACHc,UAAUF;AAAAA,EAEZT,GAAAA,OACAC,UACA,CAACS,MAAuBb,MAAMU,WAAWG,IAAIA,EAAEE,SAASF,EAAE,CAAC,IAAIF,MACjE;AACAO,uBAAqBjB,IAAI,YAAY;AAC/B,QAAA;AAAA,IACJkB;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC,UAAUC;AAAAA,IACVZ,UAAUa;AAAAA,IACVnB,iBAAiBoB;AAAAA,IACjB,GAAGhC;AAAAA,EACDI,IAAAA;AACE,QAAA;AAAA,IAAE6B,SAASC;AAAAA,IAAeC;AAAAA,MAAOC,qBAAqB;AAAA,IAC1DV;AAAAA,IACAC;AAAAA,IACAC;AAAAA,EAAAA,CACD;AACD,MAAI7B,YAAY,YAAY;AAC1B,WACG,oBAAA,4BAAA,EACC,KAAKwB,UACL,WAAWY,GAAGD,cAAcT,OAAOD,SAAS,GAC5C,UACIJ,YACApB,GAAAA,UACJ,CAAA;AAAA,EAAA,OAEC;AACL,WACG,oBAAA,yBAAA,EACC,KAAKuB,UACL,WAAWY,GAAGD,cAAcT,OAAOD,SAAS,GAC5C,UACIJ,YACApB,GAAAA,UACJ,CAAA;AAAA,EAEN;AACF;AACA,MAAME,eAAe;AACrBJ,UAAUuC,cAAcnC;"}