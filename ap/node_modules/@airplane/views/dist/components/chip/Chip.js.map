{"version":3,"file":"Chip.js","sources":["../../../src/components/chip/Chip.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { ComponentErrorBoundary } from \"components/errorBoundary/ComponentErrorBoundary\";\n\nimport { useStyles } from \"./Chip.styles\";\nimport { ChipColor, ChipProps } from \"./Chip.types\";\n\nexport const ChipComponent = ({\n  children,\n  color = \"primary\",\n  size = \"md\",\n  variant = \"light\",\n  className,\n  style,\n}: ChipProps) => {\n  if (color === \"auto\") {\n    color = pickColor(children);\n  }\n  const { classes, cx } = useStyles({\n    color,\n    size,\n    variant,\n  });\n  return (\n    <span style={style} className={cx(classes.root, className)}>\n      {children}\n    </span>\n  );\n};\n\nconst AUTO_COLOR_CHOICES: ChipProps[\"color\"][] = [\n  \"gray\",\n  \"red\",\n  \"pink\",\n  \"grape\",\n  \"violet\",\n  \"indigo\",\n  \"blue\",\n  \"cyan\",\n  \"teal\",\n  \"green\",\n  \"lime\",\n  \"yellow\",\n  \"orange\",\n];\n\nconst pickColor = (children: React.ReactNode): ChipColor => {\n  let color;\n  if (typeof children === \"string\") {\n    color = AUTO_COLOR_CHOICES[hashStr(children) % AUTO_COLOR_CHOICES.length];\n  } else if (typeof children === \"number\") {\n    color = AUTO_COLOR_CHOICES[children % AUTO_COLOR_CHOICES.length];\n  }\n  return color || \"primary\";\n};\n\nconst hashStr = (str: string) => {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash += str.charCodeAt(i);\n  }\n  return hash;\n};\n\nexport const Chip = (props: ChipProps) => (\n  <ComponentErrorBoundary componentName={Chip.displayName}>\n    <ChipComponent {...props} />\n  </ComponentErrorBoundary>\n);\n\nChip.displayName = \"Chip\";\n"],"names":["ChipComponent","children","color","size","variant","className","style","pickColor","classes","cx","useStyles","root","AUTO_COLOR_CHOICES","hashStr","length","str","hash","i","charCodeAt","Chip","props","displayName"],"mappings":";;;AAOO,MAAMA,gBAAgBA,CAAC;AAAA,EAC5BC;AAAAA,EACAC,QAAQ;AAAA,EACRC,OAAO;AAAA,EACPC,UAAU;AAAA,EACVC;AAAAA,EACAC;AACS,MAAM;AACf,MAAIJ,UAAU,QAAQ;AACpBA,YAAQK,UAAUN,QAAQ;AAAA,EAC5B;AACM,QAAA;AAAA,IAAEO;AAAAA,IAASC;AAAAA,MAAOC,UAAU;AAAA,IAChCR;AAAAA,IACAC;AAAAA,IACAC;AAAAA,EAAAA,CACD;AAEC,SAAA,oBAAC,UAAK,OAAc,WAAWK,GAAGD,QAAQG,MAAMN,SAAS,GACtDJ,SACH,CAAA;AAEJ;AAEA,MAAMW,qBAA2C,CAC/C,QACA,OACA,QACA,SACA,UACA,UACA,QACA,QACA,QACA,SACA,QACA,UACA,QAAQ;AAGV,MAAML,YAAYA,CAACN,aAAyC;AACtDC,MAAAA;AACA,MAAA,OAAOD,aAAa,UAAU;AAChCC,YAAQU,mBAAmBC,QAAQZ,QAAQ,IAAIW,mBAAmBE,MAAM;AAAA,EAAA,WAC/D,OAAOb,aAAa,UAAU;AAC/BW,YAAAA,mBAAmBX,WAAWW,mBAAmBE,MAAM;AAAA,EACjE;AACA,SAAOZ,SAAS;AAClB;AAEA,MAAMW,UAAUA,CAACE,QAAgB;AAC/B,MAAIC,OAAO;AACX,WAASC,IAAI,GAAGA,IAAIF,IAAID,QAAQG,KAAK;AAC3BF,YAAAA,IAAIG,WAAWD,CAAC;AAAA,EAC1B;AACOD,SAAAA;AACT;AAEO,MAAMG,OAAOA,CAACC,UACnB,oBAAC,wBAAuB,EAAA,eAAeD,KAAKE,aAC1C,UAAC,oBAAA,eAAA,EAAc,GAAID,MAAAA,CAAM,EAC3B,CAAA;AAGFD,KAAKE,cAAc;"}