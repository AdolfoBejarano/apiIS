{"version":3,"file":"Avatar.js","sources":["../../../src/components/avatar/Avatar.tsx"],"sourcesContent":["import { Avatar as MantineAvatar } from \"@mantine/core\";\nimport { useQuery } from \"@tanstack/react-query\";\n\nimport { USERS_GET } from \"client/endpoints\";\nimport { Fetcher } from \"client/fetcher\";\nimport { User } from \"client/types\";\nimport { ComponentErrorBoundary } from \"components/errorBoundary/ComponentErrorBoundary\";\n\nimport { AvatarProps } from \"./Avatar.types\";\n\nexport const getInitials = (displayName?: string) => {\n  if (!displayName) {\n    return undefined;\n  }\n  const nameParts = displayName.split(\" \");\n  if (nameParts.length === 1) {\n    if (nameParts[0].length === 0) {\n      return undefined;\n    } else {\n      return nameParts[0][0].toUpperCase();\n    }\n  }\n  return (\n    nameParts[0][0].toUpperCase() +\n    nameParts[nameParts.length - 1][0].toUpperCase()\n  );\n};\n\nexport const AvatarComponent = ({\n  color = \"primary\",\n  size = \"md\",\n  radius = 9999,\n  email,\n  userID,\n  src,\n  children,\n  ...props\n}: AvatarProps) => {\n  const emailOrUserID = email || userID;\n  const { data } = useQuery(\n    [USERS_GET, emailOrUserID],\n    async () => {\n      const fetcher = new Fetcher();\n      return await fetcher.get<{ user: User }>(\n        USERS_GET,\n        email ? { email } : { userID },\n      );\n    },\n    { enabled: !!emailOrUserID },\n  );\n\n  // avatarURL might be an empty string here, in which case we want to make it undefined.\n  const imageSrc = src || data?.user?.avatarURL || undefined;\n  let avatarChildren = children;\n\n  // If there's no image or children but there's a user query param is set, use initials as placeholder.\n  if (\n    imageSrc === undefined &&\n    children === undefined &&\n    emailOrUserID !== undefined\n  ) {\n    const nameInitials = getInitials(data?.user?.name);\n    const emailInitials = email?.[0]?.toUpperCase();\n    avatarChildren = nameInitials || emailInitials;\n  }\n\n  return (\n    <MantineAvatar\n      color={color}\n      radius={radius}\n      size={size}\n      variant=\"light\"\n      src={imageSrc}\n      {...props}\n    >\n      {avatarChildren}\n    </MantineAvatar>\n  );\n};\n\nexport const Avatar = (props: AvatarProps) => (\n  <ComponentErrorBoundary componentName={Avatar.displayName}>\n    <AvatarComponent {...props} />\n  </ComponentErrorBoundary>\n);\n\nAvatar.displayName = \"Avatar\";\n"],"names":["getInitials","displayName","undefined","nameParts","split","length","toUpperCase","AvatarComponent","color","size","radius","email","userID","src","children","props","emailOrUserID","data","useQuery","USERS_GET","fetcher","Fetcher","get","enabled","imageSrc","user","avatarURL","avatarChildren","nameInitials","name","emailInitials","MantineAvatar","Avatar"],"mappings":";;;;;;AAUaA,MAAAA,cAAcA,CAACC,gBAAyB;AACnD,MAAI,CAACA,aAAa;AACTC,WAAAA;AAAAA,EACT;AACMC,QAAAA,YAAYF,YAAYG,MAAM,GAAG;AACnCD,MAAAA,UAAUE,WAAW,GAAG;AAC1B,QAAIF,UAAU,CAAC,EAAEE,WAAW,GAAG;AACtBH,aAAAA;AAAAA,IAAAA,OACF;AACL,aAAOC,UAAU,CAAC,EAAE,CAAC,EAAEG,YAAY;AAAA,IACrC;AAAA,EACF;AACA,SACEH,UAAU,CAAC,EAAE,CAAC,EAAEG,YAAY,IAC5BH,UAAUA,UAAUE,SAAS,CAAC,EAAE,CAAC,EAAEC,YAAY;AAEnD;AAEO,MAAMC,kBAAkBA,CAAC;AAAA,EAC9BC,QAAQ;AAAA,EACRC,OAAO;AAAA,EACPC,SAAS;AAAA,EACTC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACA,GAAGC;AACQ,MAAM;;AACjB,QAAMC,gBAAgBL,SAASC;AACzB,QAAA;AAAA,IAAEK;AAAAA,MAASC,SACf,CAACC,WAAWH,aAAa,GACzB,YAAY;AACJI,UAAAA,UAAU,IAAIC;AACpB,WAAO,MAAMD,QAAQE,IACnBH,WACAR,QAAQ;AAAA,MAAEA;AAAAA,IAAAA,IAAU;AAAA,MAAEC;AAAAA,IAAAA,CACxB;AAAA,EAAA,GAEF;AAAA,IAAEW,SAAS,CAAC,CAACP;AAAAA,EAAAA,CACf;AAGA,QAAMQ,WAAWX,SAAOI,kCAAMQ,SAANR,mBAAYS,cAAaxB;AACjD,MAAIyB,iBAAiBb;AAGrB,MACEU,aAAatB,UACbY,aAAaZ,UACbc,kBAAkBd,QAClB;AACA,UAAM0B,eAAe5B,aAAYiB,kCAAMQ,SAANR,mBAAYY,IAAI;AACjD,UAAMC,iBAAgBnB,oCAAQ,OAARA,mBAAYL;AAClCqB,qBAAiBC,gBAAgBE;AAAAA,EACnC;AAGE,SAAA,oBAACC,UACC,EAAA,OACA,QACA,MACA,SAAQ,SACR,KAAKP,UACL,GAAIT,OAEHY,UACH,eAAA,CAAA;AAEJ;AAEO,MAAMK,SAASA,CAACjB,UACrB,oBAAC,wBAAuB,EAAA,eAAeiB,OAAO/B,aAC5C,UAAC,oBAAA,iBAAA,EAAgB,GAAIc,MAAAA,CAAM,EAC7B,CAAA;AAGFiB,OAAO/B,cAAc;"}