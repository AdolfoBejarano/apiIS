{"version":3,"file":"Confirmation.js","sources":["../../../src/components/dialog/Confirmation.tsx"],"sourcesContent":["import { createStyles } from \"@mantine/core\";\n\nimport { Button } from \"components/button/Button\";\nimport { ComponentErrorBoundary } from \"components/errorBoundary/ComponentErrorBoundary\";\nimport { Stack } from \"components/stack/Stack\";\nimport { useDialogState } from \"state/components/dialog\";\nimport { useComponentId } from \"state/components/useId\";\n\nimport { DialogComponent } from \"./Dialog\";\nimport { ConfirmationComponentProps, ConfirmationProps } from \"./Dialog.types\";\n\nexport const Confirmation = ({\n  defaultOpened,\n  id: propId,\n  ...props\n}: ConfirmationProps) => {\n  const id = useComponentId(propId);\n  const { opened, close } = useDialogState(id, {\n    initialState: {\n      opened: props.opened ?? defaultOpened,\n    },\n  });\n  return (\n    <ComponentErrorBoundary componentName={Confirmation.displayName}>\n      <ConfirmationComponent opened={opened} onClose={close} {...props} />\n    </ComponentErrorBoundary>\n  );\n};\n\nConfirmation.displayName = \"Confirmation\";\n\nconst useStyles = createStyles((theme) => {\n  return {\n    confirmationButtons: {\n      marginTop: theme.spacing.lg,\n    },\n  };\n});\n\nexport const ConfirmationComponent = ({\n  children,\n  confirmText = \"Confirm\",\n  cancelText = \"Cancel\",\n  onConfirm,\n  onClose,\n  ...props\n}: ConfirmationComponentProps) => {\n  const { classes } = useStyles();\n  if (!confirmText) {\n    throw new Error(\"confirmText cannot be empty\");\n  }\n  return (\n    <DialogComponent {...props} onClose={onClose}>\n      {children}\n      <div className={classes.confirmationButtons}>\n        <Stack direction=\"row\" justify=\"end\" spacing={12}>\n          {cancelText && (\n            <Button preset=\"tertiary\" onClick={onClose}>\n              {cancelText}\n            </Button>\n          )}\n          <Button onClick={onConfirm}>{confirmText}</Button>\n        </Stack>\n      </div>\n    </DialogComponent>\n  );\n};\n"],"names":["Confirmation","defaultOpened","id","propId","props","useComponentId","opened","close","useDialogState","initialState","displayName","useStyles","createStyles","theme","confirmationButtons","marginTop","spacing","lg","ConfirmationComponent","children","confirmText","cancelText","onConfirm","onClose","classes","Error"],"mappings":";;;;;;;;AAWO,MAAMA,eAAeA,CAAC;AAAA,EAC3BC;AAAAA,EACAC,IAAIC;AAAAA,EACJ,GAAGC;AACc,MAAM;AACjBF,QAAAA,KAAKG,eAAeF,MAAM;AAC1B,QAAA;AAAA,IAAEG;AAAAA,IAAQC;AAAAA,EAAAA,IAAUC,eAAeN,IAAI;AAAA,IAC3CO,cAAc;AAAA,MACZH,QAAQF,MAAME,UAAUL;AAAAA,IAC1B;AAAA,EAAA,CACD;AACD,SACG,oBAAA,wBAAA,EAAuB,eAAeD,aAAaU,aAClD,UAAA,oBAAC,uBAAsB,EAAA,QAAgB,SAASH,OAAO,GAAIH,MAAAA,CAAM,EACnE,CAAA;AAEJ;AAEAJ,aAAaU,cAAc;AAE3B,MAAMC,YAAYC,aAAcC,CAAU,UAAA;AACjC,SAAA;AAAA,IACLC,qBAAqB;AAAA,MACnBC,WAAWF,MAAMG,QAAQC;AAAAA,IAC3B;AAAA,EAAA;AAEJ,CAAC;AAEM,MAAMC,wBAAwBA,CAAC;AAAA,EACpCC;AAAAA,EACAC,cAAc;AAAA,EACdC,aAAa;AAAA,EACbC;AAAAA,EACAC;AAAAA,EACA,GAAGnB;AACuB,MAAM;AAC1B,QAAA;AAAA,IAAEoB;AAAAA,MAAYb,UAAU;AAC9B,MAAI,CAACS,aAAa;AACV,UAAA,IAAIK,MAAM,6BAA6B;AAAA,EAC/C;AACA,SACG,qBAAA,iBAAA,EAAoBrB,GAAAA,OAAO,SACzBe,UAAAA;AAAAA,IAAAA;AAAAA,IACA,oBAAA,OAAA,EAAI,WAAWK,QAAQV,qBACtB,UAAA,qBAAC,OAAM,EAAA,WAAU,OAAM,SAAQ,OAAM,SAAS,IAC3CO,UAAAA;AAAAA,MAAAA,kCACE,QAAO,EAAA,QAAO,YAAW,SAASE,SAChCF,UACH,YAAA;AAAA,MAED,oBAAA,QAAA,EAAO,SAASC,WAAYF,UAAY,aAAA;AAAA,IAAA,EAAA,CAC3C,EACF,CAAA;AAAA,EACF,EAAA,CAAA;AAEJ;"}