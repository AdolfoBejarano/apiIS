{"version":3,"file":"Dialog.js","sources":["../../../src/components/dialog/Dialog.tsx"],"sourcesContent":["import { Modal as MantineModal, useMantineTheme } from \"@mantine/core\";\n\nimport { ComponentErrorBoundary } from \"components/errorBoundary/ComponentErrorBoundary\";\nimport { Heading } from \"components/heading/Heading\";\nimport { Text } from \"components/text/Text\";\nimport { useDialogState } from \"state/components/dialog\";\nimport { useComponentId } from \"state/components/useId\";\n\nimport { ComponentProps, Props } from \"./Dialog.types\";\n\nexport const Dialog = ({ defaultOpened, id: propId, ...props }: Props) => {\n  const id = useComponentId(propId);\n  const { opened, close } = useDialogState(id, {\n    initialState: {\n      opened: props.opened ?? defaultOpened,\n    },\n  });\n  return (\n    <ComponentErrorBoundary componentName={Dialog.displayName}>\n      <DialogComponent opened={opened} onClose={close} {...props} />\n    </ComponentErrorBoundary>\n  );\n};\n\nDialog.displayName = \"Dialog\";\n\nexport const DialogComponent = ({\n  padding = \"lg\",\n  size = \"md\",\n  radius = \"lg\",\n  title,\n  children,\n  trapFocus = true,\n  ...props\n}: ComponentProps) => {\n  const theme = useMantineTheme();\n  let t = title;\n  if (typeof t === \"string\") {\n    t = (\n      <Heading level={5} style={{ margin: 0 }}>\n        {t}\n      </Heading>\n    );\n  }\n\n  let body = children;\n  if (typeof body === \"string\") {\n    body = <Text>{body}</Text>;\n  }\n\n  return (\n    <MantineModal\n      padding={padding}\n      size={size}\n      radius={radius}\n      title={t}\n      overlayOpacity={0.75}\n      overlayColor={theme.colors.gray[5]}\n      trapFocus={trapFocus}\n      {...props}\n    >\n      {body}\n    </MantineModal>\n  );\n};\n"],"names":["Dialog","defaultOpened","id","propId","props","useComponentId","opened","close","useDialogState","initialState","displayName","DialogComponent","padding","size","radius","title","children","trapFocus","theme","useMantineTheme","t","margin","body","MantineModal","colors","gray"],"mappings":";;;;;;;AAUO,MAAMA,SAASA,CAAC;AAAA,EAAEC;AAAAA,EAAeC,IAAIC;AAAAA,EAAQ,GAAGC;AAAa,MAAM;AAClEF,QAAAA,KAAKG,eAAeF,MAAM;AAC1B,QAAA;AAAA,IAAEG;AAAAA,IAAQC;AAAAA,EAAAA,IAAUC,eAAeN,IAAI;AAAA,IAC3CO,cAAc;AAAA,MACZH,QAAQF,MAAME,UAAUL;AAAAA,IAC1B;AAAA,EAAA,CACD;AACD,SACG,oBAAA,wBAAA,EAAuB,eAAeD,OAAOU,aAC5C,UAAA,oBAAC,iBAAgB,EAAA,QAAgB,SAASH,OAAO,GAAIH,MAAAA,CAAM,EAC7D,CAAA;AAEJ;AAEAJ,OAAOU,cAAc;AAEd,MAAMC,kBAAkBA,CAAC;AAAA,EAC9BC,UAAU;AAAA,EACVC,OAAO;AAAA,EACPC,SAAS;AAAA,EACTC;AAAAA,EACAC;AAAAA,EACAC,YAAY;AAAA,EACZ,GAAGb;AACW,MAAM;AACpB,QAAMc,QAAQC;AACd,MAAIC,IAAIL;AACJ,MAAA,OAAOK,MAAM,UAAU;AACzBA,QACG,oBAAA,SAAA,EAAQ,OAAO,GAAG,OAAO;AAAA,MAAEC,QAAQ;AAAA,IAAA,GACjCD,UACH,EAAA,CAAA;AAAA,EAEJ;AAEA,MAAIE,OAAON;AACP,MAAA,OAAOM,SAAS,UAAU;AACrB,WAAA,oBAAC,QAAMA,UAAK,KAAA,CAAA;AAAA,EACrB;AAEA,6BACGC,OACC,EAAA,SACA,MACA,QACA,OAAOH,GACP,gBAAgB,MAChB,cAAcF,MAAMM,OAAOC,KAAK,CAAC,GACjC,WACIrB,GAAAA,OAEHkB,UACH,KAAA,CAAA;AAEJ;"}