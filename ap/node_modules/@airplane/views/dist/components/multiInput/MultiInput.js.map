{"version":3,"file":"MultiInput.js","sources":["../../../src/components/multiInput/MultiInput.tsx"],"sourcesContent":["import { ActionIcon, Input } from \"@mantine/core\";\n\nimport { PlusIconMini, XMarkIconMini } from \"components/icon\";\nimport { Stack } from \"components/stack/Stack\";\n\nimport { Props } from \"./MultiInput.types\";\nimport { Button } from \"../button/Button\";\n\n/**\n * MultiInput is a component that allows the user to add and remove multiple values.\n * Any type of input can be used, passed in via the `input` prop.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const MultiInput = <T = any,>({\n  values,\n  disabled,\n  label,\n  description,\n  renderInput,\n  addDisabled,\n  onAdd,\n  onRemove,\n  required,\n  error,\n}: Props<T>) => {\n  return (\n    <Stack spacing=\"xs\">\n      <Input.Label required={required}>{label}</Input.Label>\n      <Stack align=\"start\" spacing=\"sm\">\n        {values.length > 0 && (\n          <>\n            {values.map((v, i) => {\n              return (\n                <Stack\n                  direction=\"row\"\n                  key={i}\n                  align=\"center\"\n                  spacing=\"xs\"\n                  width=\"full\"\n                >\n                  <div style={{ flexGrow: 1 }}>\n                    {renderInput({ index: i, value: v, disabled: !!disabled })}\n                  </div>\n                  {!disabled && onRemove && (\n                    <ActionIcon\n                      onClick={() => onRemove(i, v)}\n                      aria-label=\"remove\"\n                    >\n                      <XMarkIconMini />\n                    </ActionIcon>\n                  )}\n                </Stack>\n              );\n            })}\n          </>\n        )}\n        {!!onAdd && (\n          <Button\n            preset=\"tertiary\"\n            size=\"xs\"\n            disabled={disabled || addDisabled}\n            onClick={() => {\n              onAdd();\n            }}\n            leftIcon={<PlusIconMini />}\n          >\n            {values.length === 0 ? \"Add\" : \"Add another\"}\n          </Button>\n        )}\n      </Stack>\n      {description && <Input.Description>{description}</Input.Description>}\n      {error && <Input.Error>{error}</Input.Error>}\n    </Stack>\n  );\n};\n"],"names":["MultiInput","values","disabled","label","description","renderInput","addDisabled","onAdd","onRemove","required","error","length","map","v","i","flexGrow","index","value"],"mappings":";;;;;AAaO,MAAMA,aAAa,CAAW;AAAA,EACnCC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AACQ,MAAM;AAEZ,SAAA,qBAAC,OAAM,EAAA,SAAQ,MACb,UAAA;AAAA,IAAA,oBAAC,MAAM,OAAN,EAAY,UAAqBP,UAAM,OAAA;AAAA,IACvC,qBAAA,OAAA,EAAM,OAAM,SAAQ,SAAQ,MAC1BF,UAAAA;AAAAA,MAAAA,OAAOU,SAAS,KACf,oBAAA,UAAA,EACGV,iBAAOW,IAAI,CAACC,GAAGC,MAAM;AAElB,eAAA,qBAAC,SACC,WAAU,OAEV,OAAM,UACN,SAAQ,MACR,OAAM,QAEN,UAAA;AAAA,UAAA,oBAAC,SAAI,OAAO;AAAA,YAAEC,UAAU;AAAA,UAAA,GACrBV,UAAY,YAAA;AAAA,YAAEW,OAAOF;AAAAA,YAAGG,OAAOJ;AAAAA,YAAGX,UAAU,CAAC,CAACA;AAAAA,UAAU,CAAA,GAC3D;AAAA,UACC,CAACA,YAAYM,YACZ,oBAAC,cACC,SAAS,MAAMA,SAASM,GAAGD,CAAC,GAC5B,cAAW,UAEX,UAAA,oBAAC,gBAAa,CAAA,GAChB;AAAA,QAAA,EAAA,GAdGC,CAgBP;AAAA,MAEH,CAAA,GACH;AAAA,MAED,CAAC,CAACP,SACD,oBAAC,QACC,EAAA,QAAO,YACP,MAAK,MACL,UAAUL,YAAYI,aACtB,SAAS,MAAM;AACP;MACR,GACA,UAAW,oBAAA,cAAA,KAEVL,UAAOU,OAAAA,WAAW,IAAI,QAAQ,cACjC,CAAA;AAAA,IAAA,GAEJ;AAAA,IACCP,eAAe,oBAAC,MAAM,aAAN,EAAmBA,UAAY,aAAA;AAAA,IAC/CM,SAAS,oBAAC,MAAM,OAAN,EAAaA,UAAM,OAAA;AAAA,EAChC,EAAA,CAAA;AAEJ;"}