{"version":3,"file":"Callout.js","sources":["../../../src/components/callout/Callout.tsx"],"sourcesContent":["import { ComponentErrorBoundary } from \"components/errorBoundary/ComponentErrorBoundary\";\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n  InformationCircleIcon,\n} from \"components/icon\";\nimport { useCommonLayoutStyle } from \"components/layout/useCommonLayoutStyle\";\n\nimport { useStyles } from \"./Callout.styles\";\nimport { CalloutProps, CalloutVariant } from \"./Callout.types\";\n\nexport const CalloutComponent = ({\n  className,\n  style,\n  children,\n  icon,\n  title,\n  variant = \"info\",\n  width,\n  height,\n  grow,\n}: CalloutProps) => {\n  const { classes, cx } = useStyles({ variant });\n  const { classes: layoutClasses } = useCommonLayoutStyle({\n    width,\n    height,\n    grow,\n  });\n  const variantIcon = getIcon(variant);\n  const renderedIcon = icon === undefined ? variantIcon : icon;\n  return (\n    <div\n      style={style}\n      className={cx(classes.root, layoutClasses.style, className)}\n    >\n      {renderedIcon !== null && (\n        <div className={classes.icon}>{renderedIcon}</div>\n      )}\n      <div className={classes.body}>\n        {title && <div className={classes.title}>{title}</div>}\n        <div>{children}</div>\n      </div>\n    </div>\n  );\n};\n\nconst getIcon = (variant: CalloutVariant) => {\n  if (variant === \"info\") {\n    return <InformationCircleIcon />;\n  } else if (variant === \"success\") {\n    return <CheckCircleIcon />;\n  } else if (variant === \"warning\") {\n    return <ExclamationTriangleIcon />;\n  } else if (variant === \"error\") {\n    return <ExclamationCircleIcon />;\n  } else {\n    // neutral\n    return null;\n  }\n};\n\nexport const Callout = (props: CalloutProps) => (\n  <ComponentErrorBoundary componentName={Callout.displayName}>\n    <CalloutComponent {...props} />\n  </ComponentErrorBoundary>\n);\n\nCallout.displayName = \"Callout\";\n"],"names":["CalloutComponent","className","style","children","icon","title","variant","width","height","grow","classes","cx","useStyles","layoutClasses","useCommonLayoutStyle","variantIcon","getIcon","renderedIcon","undefined","root","body","Callout","props","displayName"],"mappings":";;;;;AAYO,MAAMA,mBAAmBA,CAAC;AAAA,EAC/BC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC,UAAU;AAAA,EACVC;AAAAA,EACAC;AAAAA,EACAC;AACY,MAAM;AACZ,QAAA;AAAA,IAAEC;AAAAA,IAASC;AAAAA,MAAOC,UAAU;AAAA,IAAEN;AAAAA,EAAAA,CAAS;AACvC,QAAA;AAAA,IAAEI,SAASG;AAAAA,MAAkBC,qBAAqB;AAAA,IACtDP;AAAAA,IACAC;AAAAA,IACAC;AAAAA,EAAAA,CACD;AACKM,QAAAA,cAAcC,QAAQV,OAAO;AAC7BW,QAAAA,eAAeb,SAASc,SAAYH,cAAcX;AAEtD,SAAA,qBAAC,OACC,EAAA,OACA,WAAWO,GAAGD,QAAQS,MAAMN,cAAcX,OAAOD,SAAS,GAEzDgB,UAAAA;AAAAA,IAAAA,iBAAiB,QACf,oBAAA,OAAA,EAAI,WAAWP,QAAQN,MAAOa,UAAa,cAAA;AAAA,IAE7C,qBAAA,OAAA,EAAI,WAAWP,QAAQU,MACrBf,UAAAA;AAAAA,MAAAA,SAAU,oBAAA,OAAA,EAAI,WAAWK,QAAQL,OAAQA,UAAM,OAAA;AAAA,MAChD,oBAAC,SAAKF,UAAS;AAAA,IAAA,GACjB;AAAA,EACF,EAAA,CAAA;AAEJ;AAEA,MAAMa,UAAUA,CAACV,YAA4B;AAC3C,MAAIA,YAAY,QAAQ;AACtB,+BAAQ,uBAAwB,CAAA,CAAA;AAAA,EAAA,WACvBA,YAAY,WAAW;AAChC,+BAAQ,iBAAkB,CAAA,CAAA;AAAA,EAAA,WACjBA,YAAY,WAAW;AAChC,+BAAQ,yBAA0B,CAAA,CAAA;AAAA,EAAA,WACzBA,YAAY,SAAS;AAC9B,+BAAQ,uBAAwB,CAAA,CAAA;AAAA,EAAA,OAC3B;AAEE,WAAA;AAAA,EACT;AACF;AAEO,MAAMe,UAAUA,CAACC,UACtB,oBAAC,wBAAuB,EAAA,eAAeD,QAAQE,aAC7C,UAAC,oBAAA,kBAAA,EAAiB,GAAID,MAAAA,CAAM,EAC9B,CAAA;AAGFD,QAAQE,cAAc;"}