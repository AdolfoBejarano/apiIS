{"version":3,"file":"Callout.styles.js","sources":["../../../src/components/callout/Callout.styles.ts"],"sourcesContent":["import { createStyles, MantineTheme } from \"@mantine/core\";\nimport { CSSProperties } from \"react\";\n\nimport { CalloutVariant } from \"./Callout.types\";\n\ntype StyleParams = {\n  variant: CalloutVariant;\n};\n\nexport const useStyles = createStyles((theme, params: StyleParams) => {\n  const { backgroundColor, color } = getColors(theme, params);\n  return {\n    root: {\n      backgroundColor,\n      padding: theme.spacing.md,\n      fontFamily: theme.fontFamily,\n      fontSize: theme.fontSizes.sm,\n      lineHeight: \"1.5em\",\n      borderRadius: theme.radius.sm,\n      display: \"flex\",\n      gap: 12,\n    },\n    icon: {\n      color,\n      marginTop: 2,\n      flex: \"0 0 auto\",\n    },\n    body: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      color: theme.colors.dark[7],\n    },\n    title: {\n      color,\n      fontWeight: 600,\n    },\n  };\n});\n\nconst getColors = (theme: MantineTheme, { variant }: StyleParams) => {\n  const variantMapping: Record<\n    CalloutVariant,\n    {\n      backgroundColor: CSSProperties[\"backgroundColor\"];\n      color: CSSProperties[\"color\"];\n    }\n  > = {\n    info: {\n      backgroundColor: theme.colors.blue[0],\n      color: theme.colors.blue[6],\n    },\n    success: {\n      backgroundColor: theme.colors.success[0],\n      color: theme.colors.success[6],\n    },\n    warning: {\n      backgroundColor: theme.colors.yellow[0],\n      color: theme.colors.yellow[6],\n    },\n    error: {\n      backgroundColor: theme.colors.error[0],\n      color: theme.colors.error[6],\n    },\n    neutral: {\n      backgroundColor: theme.colors.gray[0],\n      color: theme.colors.gray[6],\n    },\n  };\n  return variantMapping[variant];\n};\n"],"names":["useStyles","createStyles","theme","params","backgroundColor","color","getColors","root","padding","spacing","md","fontFamily","fontSize","fontSizes","sm","lineHeight","borderRadius","radius","display","gap","icon","marginTop","flex","body","flexDirection","colors","dark","title","fontWeight","variant","variantMapping","info","blue","success","warning","yellow","error","neutral","gray"],"mappings":";AASO,MAAMA,YAAYC,aAAa,CAACC,OAAOC,WAAwB;AAC9D,QAAA;AAAA,IAAEC;AAAAA,IAAiBC;AAAAA,EAAAA,IAAUC,UAAUJ,OAAOC,MAAM;AACnD,SAAA;AAAA,IACLI,MAAM;AAAA,MACJH;AAAAA,MACAI,SAASN,MAAMO,QAAQC;AAAAA,MACvBC,YAAYT,MAAMS;AAAAA,MAClBC,UAAUV,MAAMW,UAAUC;AAAAA,MAC1BC,YAAY;AAAA,MACZC,cAAcd,MAAMe,OAAOH;AAAAA,MAC3BI,SAAS;AAAA,MACTC,KAAK;AAAA,IACP;AAAA,IACAC,MAAM;AAAA,MACJf;AAAAA,MACAgB,WAAW;AAAA,MACXC,MAAM;AAAA,IACR;AAAA,IACAC,MAAM;AAAA,MACJL,SAAS;AAAA,MACTM,eAAe;AAAA,MACfnB,OAAOH,MAAMuB,OAAOC,KAAK,CAAC;AAAA,IAC5B;AAAA,IACAC,OAAO;AAAA,MACLtB;AAAAA,MACAuB,YAAY;AAAA,IACd;AAAA,EAAA;AAEJ,CAAC;AAED,MAAMtB,YAAYA,CAACJ,OAAqB;AAAA,EAAE2B;AAAqB,MAAM;AACnE,QAAMC,iBAMF;AAAA,IACFC,MAAM;AAAA,MACJ3B,iBAAiBF,MAAMuB,OAAOO,KAAK,CAAC;AAAA,MACpC3B,OAAOH,MAAMuB,OAAOO,KAAK,CAAC;AAAA,IAC5B;AAAA,IACAC,SAAS;AAAA,MACP7B,iBAAiBF,MAAMuB,OAAOQ,QAAQ,CAAC;AAAA,MACvC5B,OAAOH,MAAMuB,OAAOQ,QAAQ,CAAC;AAAA,IAC/B;AAAA,IACAC,SAAS;AAAA,MACP9B,iBAAiBF,MAAMuB,OAAOU,OAAO,CAAC;AAAA,MACtC9B,OAAOH,MAAMuB,OAAOU,OAAO,CAAC;AAAA,IAC9B;AAAA,IACAC,OAAO;AAAA,MACLhC,iBAAiBF,MAAMuB,OAAOW,MAAM,CAAC;AAAA,MACrC/B,OAAOH,MAAMuB,OAAOW,MAAM,CAAC;AAAA,IAC7B;AAAA,IACAC,SAAS;AAAA,MACPjC,iBAAiBF,MAAMuB,OAAOa,KAAK,CAAC;AAAA,MACpCjC,OAAOH,MAAMuB,OAAOa,KAAK,CAAC;AAAA,IAC5B;AAAA,EAAA;AAEF,SAAOR,eAAeD,OAAO;AAC/B;"}