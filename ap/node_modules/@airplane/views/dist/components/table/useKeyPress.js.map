{"version":3,"file":"useKeyPress.js","sources":["../../../src/components/table/useKeyPress.ts"],"sourcesContent":["import { isArray } from \"lodash-es\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\n\nexport type KeyPressProps = {\n  /**\n   * A key, list of keys, or list of key combinations that should be listened to.\n   * e.g. \"ENTER\", [\"ENTER\", \"TAB\"], [[\"SHIFT\", \"ENTER\"], \"TAB\"]\n   */\n  targetKeys:\n    | KeyboardEvent[\"key\"]\n    | Array<KeyboardEvent[\"key\"] | KeyboardEvent[\"key\"][]>;\n  /**\n   * If true, key events will be listened to from the window.\n   * If false, you need to manually call upHandler and downHandler and have more control over event handling.\n   */\n  listenToWindow?: boolean;\n};\n\nexport default function useKeyPress({\n  targetKeys,\n  listenToWindow,\n}: KeyPressProps) {\n  const targetKeysArray = useMemo(\n    () => (isArray(targetKeys) ? targetKeys : [targetKeys]),\n    [targetKeys],\n  );\n  const [keyPressed, setKeyPressed] = useState(false);\n  const [allKeysPressed, setAllKeysPressed] = useState(new Set<string>());\n\n  const handle = useCallback(\n    (keysPressed: Set<string>) => {\n      const isPressed = targetKeysArray.some((targetKey) => {\n        if (typeof targetKey === \"string\") {\n          return keysPressed.has(targetKey);\n        }\n        return targetKey.every((k) => keysPressed.has(k));\n      });\n      setKeyPressed(isPressed);\n      return isPressed;\n    },\n    [targetKeysArray],\n  );\n\n  const downHandler = useCallback(\n    ({ key }: { key: string }) => {\n      const newAllKeysPressed = new Set(allKeysPressed);\n      newAllKeysPressed.add(key);\n      setAllKeysPressed(newAllKeysPressed);\n      return handle(newAllKeysPressed);\n    },\n    [allKeysPressed, handle],\n  );\n\n  const upHandler = useCallback(\n    ({ key }: { key: string }) => {\n      const newAllKeysPressed = new Set(allKeysPressed);\n      newAllKeysPressed.delete(key);\n      setAllKeysPressed(newAllKeysPressed);\n      return handle(newAllKeysPressed);\n    },\n    [allKeysPressed, handle],\n  );\n\n  useEffect(() => {\n    if (!listenToWindow) return;\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [downHandler, upHandler, listenToWindow]);\n\n  if (!targetKeys) {\n    return { keyPressed: false, upHandler, downHandler };\n  }\n\n  return { keyPressed, upHandler, downHandler };\n}\n"],"names":["useKeyPress","targetKeys","listenToWindow","targetKeysArray","useMemo","isArray","keyPressed","setKeyPressed","useState","allKeysPressed","setAllKeysPressed","Set","handle","useCallback","keysPressed","isPressed","some","targetKey","has","every","k","downHandler","key","newAllKeysPressed","add","upHandler","delete","useEffect","addEventListener","removeEventListener"],"mappings":";;AAkBA,SAAwBA,YAAY;AAAA,EAClCC;AAAAA,EACAC;AACa,GAAG;AAChB,QAAMC,kBAAkBC,QACtB,MAAOC,QAAQJ,UAAU,IAAIA,aAAa,CAACA,UAAU,GACrD,CAACA,UAAU,CACb;AACA,QAAM,CAACK,YAAYC,aAAa,IAAIC,SAAS,KAAK;AAClD,QAAM,CAACC,gBAAgBC,iBAAiB,IAAIF,SAAS,oBAAIG,KAAa;AAEhEC,QAAAA,SAASC,YACb,CAACC,gBAA6B;AACtBC,UAAAA,YAAYZ,gBAAgBa,KAAMC,CAAc,cAAA;AAChD,UAAA,OAAOA,cAAc,UAAU;AAC1BH,eAAAA,YAAYI,IAAID,SAAS;AAAA,MAClC;AACA,aAAOA,UAAUE,MAAOC,CAAAA,MAAMN,YAAYI,IAAIE,CAAC,CAAC;AAAA,IAAA,CACjD;AACDb,kBAAcQ,SAAS;AAChBA,WAAAA;AAAAA,EAAAA,GAET,CAACZ,eAAe,CAClB;AAEMkB,QAAAA,cAAcR,YAClB,CAAC;AAAA,IAAES;AAAAA,EAAAA,MAA2B;AACtBC,UAAAA,oBAAoB,IAAIZ,IAAIF,cAAc;AAChDc,sBAAkBC,IAAIF,GAAG;AACzBZ,sBAAkBa,iBAAiB;AACnC,WAAOX,OAAOW,iBAAiB;AAAA,EAAA,GAEjC,CAACd,gBAAgBG,MAAM,CACzB;AAEMa,QAAAA,YAAYZ,YAChB,CAAC;AAAA,IAAES;AAAAA,EAAAA,MAA2B;AACtBC,UAAAA,oBAAoB,IAAIZ,IAAIF,cAAc;AAChDc,sBAAkBG,OAAOJ,GAAG;AAC5BZ,sBAAkBa,iBAAiB;AACnC,WAAOX,OAAOW,iBAAiB;AAAA,EAAA,GAEjC,CAACd,gBAAgBG,MAAM,CACzB;AAEAe,YAAU,MAAM;AACd,QAAI,CAACzB;AAAgB;AACd0B,WAAAA,iBAAiB,WAAWP,WAAW;AACvCO,WAAAA,iBAAiB,SAASH,SAAS;AAE1C,WAAO,MAAM;AACJI,aAAAA,oBAAoB,WAAWR,WAAW;AAC1CQ,aAAAA,oBAAoB,SAASJ,SAAS;AAAA,IAAA;AAAA,EAE9C,GAAA,CAACJ,aAAaI,WAAWvB,cAAc,CAAC;AAE3C,MAAI,CAACD,YAAY;AACR,WAAA;AAAA,MAAEK,YAAY;AAAA,MAAOmB;AAAAA,MAAWJ;AAAAA,IAAAA;AAAAA,EACzC;AAEO,SAAA;AAAA,IAAEf;AAAAA,IAAYmB;AAAAA,IAAWJ;AAAAA,EAAAA;AAClC;"}