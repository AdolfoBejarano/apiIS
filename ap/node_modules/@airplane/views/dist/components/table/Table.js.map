{"version":3,"file":"Table.js","sources":["../../../src/components/table/Table.tsx"],"sourcesContent":["import { useState } from \"react\";\n\nimport { DefaultOutput, DefaultParams, ParamValues } from \"client\";\nimport { ComponentErrorBoundary } from \"components/errorBoundary/ComponentErrorBoundary\";\nimport { LatestRun } from \"components/errorBoundary/LatestRunDetails\";\n\nimport { ConnectedTable } from \"./ConnectedTable\";\nimport { TableProps } from \"./Table.types\";\nimport { doesUseTask, TableWithTask } from \"./TableWithTask\";\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const Table = <\n  TRowData extends object = Record<string, any>,\n  TParams extends ParamValues | undefined = DefaultParams,\n  TOutput = DefaultOutput,\n>(\n  props: TableProps<TRowData, TParams, TOutput>,\n) => {\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n  const usesTask = doesUseTask<TRowData, TParams, TOutput>(props);\n  const [latestRun, setLatestRun] = useState<LatestRun>();\n\n  if (usesTask) {\n    return (\n      <ComponentErrorBoundary\n        componentName={Table.displayName}\n        latestRun={latestRun}\n      >\n        <TableWithTask {...props} setLatestRun={setLatestRun} />\n      </ComponentErrorBoundary>\n    );\n  } else {\n    return (\n      <ComponentErrorBoundary componentName={Table.displayName}>\n        <ConnectedTable {...props} />\n      </ComponentErrorBoundary>\n    );\n  }\n};\n\nTable.displayName = \"Table\";\n"],"names":["Table","props","usesTask","doesUseTask","latestRun","setLatestRun","useState","displayName"],"mappings":";;;;;AAWaA,MAAAA,QAAQ,CAKnBC,UACG;AAEGC,QAAAA,WAAWC,YAAwCF,KAAK;AAC9D,QAAM,CAACG,WAAWC,YAAY,IAAIC,SAAoB;AAEtD,MAAIJ,UAAU;AAEV,WAAA,oBAAC,wBACC,EAAA,eAAeF,MAAMO,aACrB,WAEA,UAAA,oBAAC,eAAkBN,EAAAA,GAAAA,OAAO,aAAA,CAA2B,EACvD,CAAA;AAAA,EAAA,OAEG;AAEH,WAAA,oBAAC,0BAAuB,eAAeD,MAAMO,aAC3C,UAAC,oBAAA,gBAAA,EAAe,GAAIN,MAAM,CAAA,EAC5B,CAAA;AAAA,EAEJ;AACF;AAEAD,MAAMO,cAAc;"}