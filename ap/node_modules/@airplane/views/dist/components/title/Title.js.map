{"version":3,"file":"Title.js","sources":["../../../src/components/title/Title.tsx"],"sourcesContent":["import { createStyles, CSSObject, Title as MantineTitle } from \"@mantine/core\";\nimport React from \"react\";\n\nimport { ComponentErrorBoundary } from \"components/errorBoundary/ComponentErrorBoundary\";\nimport { CommonLayoutProps } from \"components/layout/layout.types\";\nimport { useCommonLayoutStyle } from \"components/layout/useCommonLayoutStyle\";\nimport { CommonStylingProps } from \"components/styling.types\";\nimport { Color } from \"components/theme/colors\";\n\ntype TitleOrder = 1 | 2 | 3 | 4 | 5 | 6;\n\nexport type TitleProps = {\n  /**\n   * Title content\n   */\n  children: React.ReactNode;\n  /**\n   * The size and style of the title with 1 being the largest and 6 being the smallest.\n   *\n   * @default 1\n   */\n  order?: TitleOrder;\n  /**\n   * Title color\n   */\n  color?: Color;\n  /** Sets font-weight css property */\n  weight?: React.CSSProperties[\"fontWeight\"];\n  /** Sets text-transform css property */\n  transform?: React.CSSProperties[\"textTransform\"];\n  /** Sets text-align css property */\n  align?: React.CSSProperties[\"textAlign\"];\n  /**\n   * Adds font-style: italic\n   */\n  italic?: boolean;\n  /**\n   * Underline the title\n   */\n  underline?: boolean;\n  /**\n   * Add strikethrough style\n   */\n  strikethrough?: boolean;\n  /**\n   * CSS style overrides\n   * @deprecated\n   */\n  sx?: CSSObject;\n} & CommonLayoutProps &\n  CommonStylingProps;\n\nconst titleOrderToGrayShade = {\n  1: 9,\n  2: 8,\n  3: 8,\n  4: 7,\n  5: 7,\n  6: 7,\n};\n\ntype StyleParams = {\n  order: TitleOrder;\n};\n\nconst useStyles = createStyles((theme, { order }: StyleParams) => ({\n  root: {\n    ...theme.other.typography.headingPreset[order],\n    \"&:first-child\": {\n      marginTop: 0,\n    },\n  },\n}));\n\nexport const TitleComponent = ({\n  className,\n  style,\n  order = 1,\n  color,\n  ...props\n}: TitleProps) => {\n  const { classes, cx } = useStyles({ order });\n  const { classes: layoutClasses } = useCommonLayoutStyle(props);\n  return (\n    <MantineTitle\n      order={order}\n      style={style}\n      className={cx(classes.root, layoutClasses.style, className)}\n      color={color ?? `gray.${titleOrderToGrayShade[order]}`}\n      {...props}\n    />\n  );\n};\n\n/**\n * @deprecated - Use Heading instead\n */\nexport const Title = (props: TitleProps) => (\n  <ComponentErrorBoundary componentName={Title.displayName}>\n    <TitleComponent {...props} />\n  </ComponentErrorBoundary>\n);\nTitle.displayName = \"Title\";\n"],"names":["titleOrderToGrayShade","useStyles","createStyles","theme","order","root","other","typography","headingPreset","marginTop","TitleComponent","className","style","color","props","classes","cx","layoutClasses","useCommonLayoutStyle","MantineTitle","Title","displayName"],"mappings":";;;;AAoDA,MAAMA,wBAAwB;AAAA,EAC5B,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AACL;AAMA,MAAMC,YAAYC,aAAa,CAACC,OAAO;AAAA,EAAEC;AAAmB,OAAO;AAAA,EACjEC,MAAM;AAAA,IACJ,GAAGF,MAAMG,MAAMC,WAAWC,cAAcJ,KAAK;AAAA,IAC7C,iBAAiB;AAAA,MACfK,WAAW;AAAA,IACb;AAAA,EACF;AACF,EAAE;AAEK,MAAMC,iBAAiBA,CAAC;AAAA,EAC7BC;AAAAA,EACAC;AAAAA,EACAR,QAAQ;AAAA,EACRS;AAAAA,EACA,GAAGC;AACO,MAAM;AACV,QAAA;AAAA,IAAEC;AAAAA,IAASC;AAAAA,MAAOf,UAAU;AAAA,IAAEG;AAAAA,EAAAA,CAAO;AACrC,QAAA;AAAA,IAAEW,SAASE;AAAAA,EAAAA,IAAkBC,qBAAqBJ,KAAK;AAE3D,SAAA,oBAACK,WACC,OACA,OACA,WAAWH,GAAGD,QAAQV,MAAMY,cAAcL,OAAOD,SAAS,GAC1D,OAAOE,SAAU,QAAOb,sBAAsBI,KAAK,CAAE,IACrD,GAAIU,MACJ,CAAA;AAEN;AAKO,MAAMM,QAAQA,CAACN,UACpB,oBAAC,wBAAuB,EAAA,eAAeM,MAAMC,aAC3C,UAAC,oBAAA,gBAAA,EAAe,GAAIP,MAAAA,CAAM,EAC5B,CAAA;AAEFM,MAAMC,cAAc;"}