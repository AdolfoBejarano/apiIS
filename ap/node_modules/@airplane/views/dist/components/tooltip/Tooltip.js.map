{"version":3,"file":"Tooltip.js","sources":["../../../src/components/tooltip/Tooltip.tsx"],"sourcesContent":["import { Tooltip as MantineTooltip } from \"@mantine/core\";\nimport { Fragment, createElement } from \"react\";\n\nimport { ComponentErrorBoundary } from \"components/errorBoundary/ComponentErrorBoundary\";\n\nimport { Props } from \"./Tooltip.types\";\n\nexport const TooltipComponent = ({\n  color = \"gray.8\",\n  children,\n  wrapper,\n  ...restProps\n}: Props) => {\n  if (!wrapper) {\n    if (\n      typeof children === \"string\" ||\n      typeof children === \"number\" ||\n      (typeof children === \"object\" &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (children as any)?.type === Fragment)\n    ) {\n      wrapper = \"span\";\n    }\n  }\n  return (\n    <MantineTooltip color={color} withinPortal {...restProps}>\n      {wrapper ? createElement(wrapper, {}, children) : children}\n    </MantineTooltip>\n  );\n};\n\nexport const Tooltip = (props: Props) => (\n  <ComponentErrorBoundary componentName={Tooltip.displayName}>\n    <TooltipComponent {...props} />\n  </ComponentErrorBoundary>\n);\nTooltip.displayName = \"Tooltip\";\n"],"names":["TooltipComponent","color","children","wrapper","restProps","type","Fragment","MantineTooltip","createElement","Tooltip","props","displayName"],"mappings":";;;;AAOO,MAAMA,mBAAmBA,CAAC;AAAA,EAC/BC,QAAQ;AAAA,EACRC;AAAAA,EACAC;AAAAA,EACA,GAAGC;AACE,MAAM;AACX,MAAI,CAACD,SAAS;AACZ,QACE,OAAOD,aAAa,YACpB,OAAOA,aAAa,YACnB,OAAOA,aAAa;AAAA,KAElBA,qCAAkBG,UAASC,UAC9B;AACU,gBAAA;AAAA,IACZ;AAAA,EACF;AACA,SACG,oBAAAC,WAAA,EAAe,OAAc,cAAY,MAAC,GAAIH,WAC5CD,UAAUK,UAAAA,8BAAcL,SAAS,CAAA,GAAID,QAAQ,IAAIA,SACpD,CAAA;AAEJ;AAEO,MAAMO,UAAUA,CAACC,UACtB,oBAAC,wBAAuB,EAAA,eAAeD,QAAQE,aAC7C,UAAC,oBAAA,kBAAA,EAAiB,GAAID,MAAAA,CAAM,EAC9B,CAAA;AAEFD,QAAQE,cAAc;"}