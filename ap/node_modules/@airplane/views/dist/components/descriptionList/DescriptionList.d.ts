import type { ParamValues } from "airplane/api";
import React from "react";
import { DefaultParams } from "../../client";
import { SetLatestRunProps } from "../../components/errorBoundary/LatestRunDetails";
import { DescriptionListComponentProps, DescriptionListPropsWithTask, DescriptionListProps } from "./DescriptionList.types";
export declare const useStyles: (params: void, options?: import("@mantine/core").UseStylesOptions<string> | undefined) => {
    classes: {
        item: string;
        term: string;
        description: string;
    };
    cx: (...args: any) => string;
    theme: import("@mantine/core").MantineTheme;
};
export declare const DescriptionListComponent: ({ items, align, loading, ...restProps }: DescriptionListComponentProps) => import("react/jsx-runtime").JSX.Element;
export declare const DescriptionListWithTask: <TParams extends ParamValues | undefined = DefaultParams, TOutput = any>({ task, outputTransform, setLatestRun, ...restProps }: {
    task: import("..").TaskQuery<TParams, TOutput>;
    outputTransform?: ((output: TOutput) => {
        term: React.ReactNode;
        description: React.ReactNode;
    }[] | Record<string, React.ReactNode>) | undefined;
    items?: undefined;
} & Omit<DescriptionListComponentProps, "items"> & SetLatestRunProps) => import("react/jsx-runtime").JSX.Element;
export declare const DescriptionList: {
    <TParams extends ParamValues | undefined = DefaultParams, TOutput = any>(props: DescriptionListProps<TParams, TOutput>): import("react/jsx-runtime").JSX.Element;
    displayName: string;
};
