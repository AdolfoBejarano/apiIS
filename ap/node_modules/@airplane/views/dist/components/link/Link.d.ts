import { Ref } from "react";
import { NavigateParams } from "../../routing";
import { Props } from "./Link.types";
/** LinkWithoutRef is exported for documentation purposes. */
export declare const LinkWithoutRef: ({ innerRef, children, newTab, href, ...props }: {
    href: string | NavigateParams;
    newTab?: boolean | undefined;
} & import("../styling.types").CommonStylingProps & {
    disableMarkdown?: boolean | undefined;
} & {
    children: import("react").ReactNode;
    size?: import("@mantine/core").MantineSize | undefined;
    color?: import("../theme/colors").Color | undefined;
    lineClamp?: number | undefined;
    weight?: import("../theme/typography").FontWeight | undefined;
    transform?: import("csstype").Property.TextTransform | undefined;
    align?: import("csstype").Property.TextAlign | undefined;
    italic?: boolean | undefined;
    underline?: boolean | undefined;
    strikethrough?: boolean | undefined;
    sx?: import("@mantine/core").CSSObject | undefined;
} & import("../layout/layout.types").CommonLayoutProps & Omit<import("react").DetailedHTMLProps<import("react").AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>, "ref" | keyof import("../styling.types").CommonStylingProps | "href" | "newTab"> & {
    innerRef: Ref<HTMLAnchorElement>;
}) => import("react/jsx-runtime").JSX.Element;
export declare const Link: import("react").ForwardRefExoticComponent<{
    href: string | NavigateParams;
    newTab?: boolean | undefined;
} & import("../styling.types").CommonStylingProps & {
    disableMarkdown?: boolean | undefined;
} & {
    children: import("react").ReactNode;
    size?: import("@mantine/core").MantineSize | undefined;
    color?: import("../theme/colors").Color | undefined;
    lineClamp?: number | undefined;
    weight?: import("../theme/typography").FontWeight | undefined;
    transform?: import("csstype").Property.TextTransform | undefined;
    align?: import("csstype").Property.TextAlign | undefined;
    italic?: boolean | undefined;
    underline?: boolean | undefined;
    strikethrough?: boolean | undefined;
    sx?: import("@mantine/core").CSSObject | undefined;
} & import("../layout/layout.types").CommonLayoutProps & Omit<import("react").DetailedHTMLProps<import("react").AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>, "ref" | keyof import("../styling.types").CommonStylingProps | "href" | "newTab"> & import("react").RefAttributes<HTMLAnchorElement>>;
