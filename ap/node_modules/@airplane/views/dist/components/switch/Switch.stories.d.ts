/// <reference types="react" />
import { SwitchProps } from "./Switch.types";
declare const _default: import("@storybook/types").ComponentAnnotations<import("@storybook/react/dist/types-0a347bb9").R, {
    id?: string | undefined;
    defaultDisabled?: boolean | undefined;
    defaultChecked?: boolean | undefined;
} & import("../../state/components/input/types").InputProps<boolean, boolean> & {
    size?: import("@mantine/styles").MantineSize | undefined;
    color?: import("../theme/colors").Color | undefined;
    label?: import("react").ReactNode;
    description?: import("react").ReactNode;
    checked?: boolean | undefined;
    onChange?: ((checked: boolean) => void) | undefined;
    error?: import("react").ReactNode;
    offLabel?: import("react").ReactNode;
    onLabel?: import("react").ReactNode;
    sx?: import("@mantine/styles").CSSObject | undefined;
} & import("../styling.types").CommonStylingProps & Omit<import("react").DetailedHTMLProps<import("react").InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>, "error" | "color" | "ref" | "size" | "sx" | "label" | "onChange" | keyof import("../styling.types").CommonStylingProps | "checked" | "description" | "offLabel" | "onLabel"> & import("react").RefAttributes<HTMLInputElement>>;
export default _default;
export declare const Default: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0a347bb9").R, SwitchProps>;
export declare const DefaultChecked: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0a347bb9").R, SwitchProps>;
export declare const ErrorColor: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0a347bb9").R, SwitchProps>;
export declare const XL: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0a347bb9").R, SwitchProps>;
export declare const InnerLabels: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0a347bb9").R, SwitchProps>;
export declare const ObjectData: () => import("react/jsx-runtime").JSX.Element;
