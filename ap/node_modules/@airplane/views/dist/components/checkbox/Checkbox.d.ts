import * as React from "react";
import { CheckboxComponentProps, CheckboxProps } from "./Checkbox.types";
/** Presentational checkbox component */
export declare const CheckboxComponent: React.ForwardRefExoticComponent<{
    size?: import("@mantine/core").MantineSize | undefined;
    color?: import("../theme/colors").Color | undefined;
    label?: React.ReactNode;
    description?: React.ReactNode;
    radius?: import("@mantine/core").MantineSize | undefined;
    checked?: boolean | undefined;
    onChange?: ((checked: boolean) => void) | undefined;
    error?: React.ReactNode;
    indeterminate?: boolean | undefined;
    sx?: import("@mantine/core").CSSObject | undefined;
    styles?: import("@mantine/core").Styles<import("@mantine/core").CheckboxStylesNames, import("@mantine/core").CheckboxStylesParams> | undefined;
    classNames?: Partial<Record<import("@mantine/core").CheckboxStylesNames, string>> | undefined;
} & import("../styling.types").CommonStylingProps & Omit<React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>, "error" | "color" | "ref" | "size" | "styles" | "classNames" | "sx" | "label" | "onChange" | "radius" | keyof import("../styling.types").CommonStylingProps | "checked" | "description" | "indeterminate"> & React.RefAttributes<HTMLInputElement>>;
export declare const Checkbox: React.ForwardRefExoticComponent<{
    id?: string | undefined;
    defaultDisabled?: boolean | undefined;
    defaultChecked?: boolean | undefined;
} & import("../../state/components/input/types").InputProps<boolean, boolean> & Omit<CheckboxComponentProps, "styles"> & React.RefAttributes<HTMLInputElement>>;
/** Exported for documentation purposes */
export declare const CheckboxWithoutRef: (props: CheckboxProps & {
    innerRef: React.Ref<HTMLInputElement>;
}) => import("react/jsx-runtime").JSX.Element;
