/// <reference types="react" />
declare const _default: import("@storybook/types").ComponentAnnotations<import("@storybook/react/dist/types-0a347bb9").R, {
    id?: string | undefined;
    defaultValue?: string | undefined;
    defaultDisabled?: boolean | undefined;
} & import("../../state/components/input/types").InputProps<string, string> & {
    placeholder?: string | undefined;
    label?: import("react").ReactNode;
    description?: import("react").ReactNode;
    error?: import("react").ReactNode;
    disabled?: boolean | undefined;
    value?: string | undefined;
    language?: "sql" | "json" | "javascript" | "jsx" | "tsx" | "typescript" | "yaml" | "mysql" | "pgsql" | undefined;
    lineNumbers?: boolean | undefined;
    foldGutter?: boolean | undefined;
    theme?: "dark" | "light" | undefined;
} & import("../styling.types").CommonStylingProps>;
export default _default;
export declare const Default: () => import("react/jsx-runtime").JSX.Element;
export declare const DarkMode: () => import("react/jsx-runtime").JSX.Element;
export declare const WithError: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0a347bb9").R, {
    id?: string | undefined;
    defaultValue?: string | undefined;
    defaultDisabled?: boolean | undefined;
} & import("../../state/components/input/types").InputProps<string, string> & {
    placeholder?: string | undefined;
    label?: import("react").ReactNode;
    description?: import("react").ReactNode;
    error?: import("react").ReactNode;
    disabled?: boolean | undefined;
    value?: string | undefined;
    language?: "sql" | "json" | "javascript" | "jsx" | "tsx" | "typescript" | "yaml" | "mysql" | "pgsql" | undefined;
    lineNumbers?: boolean | undefined;
    foldGutter?: boolean | undefined;
    theme?: "dark" | "light" | undefined;
} & import("../styling.types").CommonStylingProps>;
export declare const Disabled: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0a347bb9").R, {
    id?: string | undefined;
    defaultValue?: string | undefined;
    defaultDisabled?: boolean | undefined;
} & import("../../state/components/input/types").InputProps<string, string> & {
    placeholder?: string | undefined;
    label?: import("react").ReactNode;
    description?: import("react").ReactNode;
    error?: import("react").ReactNode;
    disabled?: boolean | undefined;
    value?: string | undefined;
    language?: "sql" | "json" | "javascript" | "jsx" | "tsx" | "typescript" | "yaml" | "mysql" | "pgsql" | undefined;
    lineNumbers?: boolean | undefined;
    foldGutter?: boolean | undefined;
    theme?: "dark" | "light" | undefined;
} & import("../styling.types").CommonStylingProps>;
export declare const Append: () => import("react/jsx-runtime").JSX.Element;
