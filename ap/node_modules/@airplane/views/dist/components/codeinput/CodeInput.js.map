{"version":3,"file":"CodeInput.js","sources":["../../../src/components/codeinput/CodeInput.tsx"],"sourcesContent":["import { ReactCodeMirrorRef } from \"@uiw/react-codemirror\";\nimport React from \"react\";\nimport { useCallback, useRef } from \"react\";\n\nimport { ComponentErrorBoundary } from \"components/errorBoundary/ComponentErrorBoundary\";\nimport { useRegisterFormInput } from \"state/components/form/useRegisterFormInput\";\nimport { useInput } from \"state/components/input/useInput\";\nimport { useCodeInputState } from \"state/components/text-input\";\nimport { useComponentId } from \"state/components/useId\";\n\nimport { CodeInputProps } from \"./CodeInput.types\";\nconst CodeInputComponent = React.lazy(() => import(\"./CodeInputComponent\"));\n\nexport const CodeInput = ({\n  id,\n  defaultValue,\n  defaultDisabled,\n  validate,\n  required,\n  onChange,\n  ...restProps\n}: CodeInputProps) => {\n  id = useComponentId(id);\n  const ref = useRef<ReactCodeMirrorRef>({});\n  const focus = useCallback(() => {\n    ref.current?.view?.focus();\n  }, []);\n  const { state, dispatch } = useCodeInputState(id, {\n    initialState: {\n      disabled: restProps.disabled ?? defaultDisabled,\n      value: restProps.value ?? defaultValue,\n    },\n    focus,\n  });\n  const { inputProps } = useInput(\n    { validate, required, onChange },\n    state,\n    dispatch,\n    (v) => v,\n  );\n\n  useRegisterFormInput(id, \"text-input\");\n\n  return (\n    <ComponentErrorBoundary componentName={CodeInput.displayName}>\n      <React.Suspense fallback={null}>\n        <CodeInputComponent\n          innerRef={ref}\n          required={required}\n          {...inputProps}\n          {...restProps}\n        />\n      </React.Suspense>\n    </ComponentErrorBoundary>\n  );\n};\n\nCodeInput.displayName = \"CodeInput\";\n"],"names":["CodeInputComponent","lazy","CodeInput","id","defaultValue","defaultDisabled","validate","required","onChange","restProps","useComponentId","ref","useRef","focus","useCallback","current","view","state","dispatch","useCodeInputState","initialState","disabled","value","inputProps","useInput","v","useRegisterFormInput","displayName","React"],"mappings":";;;;;;;AAWA,MAAMA,qBAA2BC,+BAAAA,KAAK,MAAM,OAAO,yBAAsB,CAAC;AAEnE,MAAMC,YAAYA,CAAC;AAAA,EACxBC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACA,GAAGC;AACW,MAAM;AACpBN,OAAKO,eAAeP,EAAE;AAChBQ,QAAAA,MAAMC,OAA2B,CAAA,CAAE;AACnCC,QAAAA,QAAQC,YAAY,MAAM;;AAC1BC,oBAAAA,YAAAA,mBAASC,SAATD,mBAAeF;AAAAA,EACrB,GAAG,CAAE,CAAA;AACC,QAAA;AAAA,IAAEI;AAAAA,IAAOC;AAAAA,EAAAA,IAAaC,kBAAkBhB,IAAI;AAAA,IAChDiB,cAAc;AAAA,MACZC,UAAUZ,UAAUY,YAAYhB;AAAAA,MAChCiB,OAAOb,UAAUa,SAASlB;AAAAA,IAC5B;AAAA,IACAS;AAAAA,EAAAA,CACD;AACK,QAAA;AAAA,IAAEU;AAAAA,MAAeC,SACrB;AAAA,IAAElB;AAAAA,IAAUC;AAAAA,IAAUC;AAAAA,EACtBS,GAAAA,OACAC,UACCO,CAAAA,MAAMA,CACT;AAEAC,uBAAqBvB,IAAI,YAAY;AAGnC,SAAA,oBAAC,0BAAuB,eAAeD,UAAUyB,aAC/C,UAAC,oBAAAC,eAAM,UAAN,EAAe,UAAU,MACxB,UAAC,oBAAA,oBAAA,EACC,UAAUjB,KACV,UACA,GAAIY,YACAd,GAAAA,UAAU,CAAA,EAElB,CAAA,EACF,CAAA;AAEJ;AAEAP,UAAUyB,cAAc;"}