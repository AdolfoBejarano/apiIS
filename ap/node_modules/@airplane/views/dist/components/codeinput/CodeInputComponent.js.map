{"version":3,"file":"CodeInputComponent.js","sources":["../../../src/components/codeinput/CodeInputComponent.tsx"],"sourcesContent":["import { autocompletion } from \"@codemirror/autocomplete\";\nimport { javascript } from \"@codemirror/lang-javascript\";\nimport { json, jsonParseLinter } from \"@codemirror/lang-json\";\nimport { MySQL, PostgreSQL, sql } from \"@codemirror/lang-sql\";\nimport {\n  foldGutter as foldGutterExtension,\n  StreamLanguage,\n} from \"@codemirror/language\";\nimport { yaml } from \"@codemirror/legacy-modes/mode/yaml\";\nimport { linter } from \"@codemirror/lint\";\nimport { Card as MantineCard, Input as MantineInput } from \"@mantine/core\";\nimport CodeMirror, { ReactCodeMirrorRef } from \"@uiw/react-codemirror\";\nimport { Ref, useMemo } from \"react\";\n\nimport { useStyles } from \"./CodeInput.styles\";\nimport { CodeInputComponentPropsBase } from \"./CodeInput.types\";\nimport { dracula, github } from \"./themes\";\n\n/**\n * Presentational code input component.\n */\nconst CodeInputComponent = ({\n  placeholder,\n  label,\n  description,\n  error,\n  disabled,\n  value,\n  language,\n  lineNumbers = false,\n  foldGutter = false,\n  theme = \"light\",\n  className,\n  style,\n  innerRef,\n  required,\n  onChange,\n}: CodeInputComponentPropsBase & {\n  innerRef: Ref<ReactCodeMirrorRef>;\n  required?: boolean;\n  onChange: (v: string) => void;\n}) => {\n  const extensions = useMemo(\n    () => getExtensions(language, foldGutter),\n    [language, foldGutter],\n  );\n\n  const hasGutters = lineNumbers || foldGutter;\n  const styles = useStyles();\n\n  return (\n    <MantineInput.Wrapper\n      label={label}\n      withAsterisk={required}\n      error={error}\n      description={description}\n    >\n      <MantineCard\n        unstyled\n        withBorder\n        className={theme === \"dark\" ? styles.classes.darkColors : undefined}\n      >\n        {/* MantineCard.Section needed to override native Card padding */}\n        <MantineCard.Section\n          className={\n            hasGutters\n              ? styles.classes.guttersPadding\n              : styles.classes.noGuttersPadding\n          }\n        >\n          <CodeMirror\n            className={className}\n            style={{\n              minHeight: 54,\n              overflowY: \"auto\",\n              ...style,\n            }}\n            ref={innerRef}\n            value={value}\n            onChange={(value, viewUpdate) => {\n              onChange?.(value);\n            }}\n            editable={!disabled}\n            placeholder={placeholder}\n            basicSetup={{\n              lineNumbers,\n              foldGutter: false,\n              bracketMatching: true,\n              highlightActiveLine: false,\n              highlightActiveLineGutter: false,\n              autocompletion: false,\n            }}\n            extensions={extensions}\n            theme={theme === \"light\" ? github : dracula}\n          />\n        </MantineCard.Section>\n      </MantineCard>\n    </MantineInput.Wrapper>\n  );\n};\n\nCodeInputComponent.displayName = \"CodeInput\";\n\nconst getExtensions = (language?: string, foldGutter?: boolean) => {\n  const extensions = [autocompletion({ icons: false })];\n  if (foldGutter) {\n    extensions.push(foldGutterExtension({ openText: \"▾\", closedText: \"▸\" }));\n  }\n  switch (language) {\n    case \"sql\":\n      extensions.push(sql());\n      break;\n    case \"mysql\":\n      extensions.push(sql({ dialect: MySQL }));\n      break;\n    case \"pgsql\":\n      extensions.push(sql({ dialect: PostgreSQL }));\n      break;\n    case \"json\":\n      extensions.push(json());\n      extensions.push(linter(jsonParseLinter()));\n      break;\n    case \"javascript\":\n      extensions.push(javascript());\n      break;\n    case \"jsx\":\n      extensions.push(javascript({ jsx: true }));\n      break;\n    case \"typescript\":\n      extensions.push(javascript({ typescript: true }));\n      break;\n    case \"tsx\":\n      extensions.push(javascript({ jsx: true, typescript: true }));\n      break;\n    case \"yaml\":\n      extensions.push(StreamLanguage.define(yaml));\n      break;\n    default:\n      break;\n  }\n\n  return extensions;\n};\n\nexport default CodeInputComponent;\n"],"names":["CodeInputComponent","placeholder","label","description","error","disabled","value","language","lineNumbers","foldGutter","theme","className","style","innerRef","required","onChange","extensions","useMemo","getExtensions","hasGutters","styles","useStyles","MantineInput","MantineCard","classes","darkColors","undefined","guttersPadding","noGuttersPadding","minHeight","overflowY","viewUpdate","bracketMatching","highlightActiveLine","highlightActiveLineGutter","autocompletion","github","dracula","displayName","icons","push","foldGutterExtension","openText","closedText","sql","dialect","MySQL","PostgreSQL","json","linter","jsonParseLinter","javascript","jsx","typescript","StreamLanguage","define","yaml"],"mappings":";;;;;;;;;;;;;AAqBA,MAAMA,qBAAqBA,CAAC;AAAA,EAC1BC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC,cAAc;AAAA,EACdC,YAAAA,cAAa;AAAA,EACbC,QAAQ;AAAA,EACRC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAKF,MAAM;AACEC,QAAAA,aAAaC,QACjB,MAAMC,cAAcX,UAAUE,WAAU,GACxC,CAACF,UAAUE,WAAU,CACvB;AAEA,QAAMU,aAAaX,eAAeC;AAClC,QAAMW,SAASC;AAEf,6BACGC,MAAa,SAAb,EACC,OACA,cAAcR,UACd,OACA,aAEA,UAAA,oBAACS,QACC,UAAQ,MACR,YAAU,MACV,WAAWb,UAAU,SAASU,OAAOI,QAAQC,aAAaC,QAG1D,UAAA,oBAACH,KAAY,SAAZ,EACC,WACEJ,aACIC,OAAOI,QAAQG,iBACfP,OAAOI,QAAQI,kBAGrB,UAAC,oBAAA,YAAA,EACC,WACA,OAAO;AAAA,IACLC,WAAW;AAAA,IACXC,WAAW;AAAA,IACX,GAAGlB;AAAAA,EAAAA,GAEL,KAAKC,UACL,OACA,UAAU,CAACP,QAAOyB,eAAe;AAC/BhB,yCAAWT;AAAAA,EAEb,GAAA,UAAU,CAACD,UACX,aACA,YAAY;AAAA,IACVG;AAAAA,IACAC,YAAY;AAAA,IACZuB,iBAAiB;AAAA,IACjBC,qBAAqB;AAAA,IACrBC,2BAA2B;AAAA,IAC3BC,gBAAgB;AAAA,EAClB,GACA,YACA,OAAOzB,UAAU,UAAU0B,SAASC,QAAAA,CAAQ,EAEhD,CAAA,GACF,EACF,CAAA;AAEJ;AAEArC,mBAAmBsC,cAAc;AAEjC,MAAMpB,gBAAgBA,CAACX,UAAmBE,iBAAyB;AAC3DO,QAAAA,aAAa,CAACmB,eAAe;AAAA,IAAEI,OAAO;AAAA,EAAO,CAAA,CAAC;AACpD,MAAI9B,cAAY;AACdO,eAAWwB,KAAKC,WAAoB;AAAA,MAAEC,UAAU;AAAA,MAAKC,YAAY;AAAA,IAAK,CAAA,CAAC;AAAA,EACzE;AACA,UAAQpC,UAAQ;AAAA,IACd,KAAK;AACQiC,iBAAAA,KAAKI,KAAK;AACrB;AAAA,IACF,KAAK;AACH5B,iBAAWwB,KAAKI,IAAI;AAAA,QAAEC,SAASC;AAAAA,MAAO,CAAA,CAAC;AACvC;AAAA,IACF,KAAK;AACH9B,iBAAWwB,KAAKI,IAAI;AAAA,QAAEC,SAASE;AAAAA,MAAY,CAAA,CAAC;AAC5C;AAAA,IACF,KAAK;AACQP,iBAAAA,KAAKQ,MAAM;AACtBhC,iBAAWwB,KAAKS,OAAOC,gBAAgB,CAAC,CAAC;AACzC;AAAA,IACF,KAAK;AACQV,iBAAAA,KAAKW,YAAY;AAC5B;AAAA,IACF,KAAK;AACHnC,iBAAWwB,KAAKW,WAAW;AAAA,QAAEC,KAAK;AAAA,MAAM,CAAA,CAAC;AACzC;AAAA,IACF,KAAK;AACHpC,iBAAWwB,KAAKW,WAAW;AAAA,QAAEE,YAAY;AAAA,MAAM,CAAA,CAAC;AAChD;AAAA,IACF,KAAK;AACHrC,iBAAWwB,KAAKW,WAAW;AAAA,QAAEC,KAAK;AAAA,QAAMC,YAAY;AAAA,MAAM,CAAA,CAAC;AAC3D;AAAA,IACF,KAAK;AACHrC,iBAAWwB,KAAKc,eAAeC,OAAOC,IAAI,CAAC;AAC3C;AAAA,EAGJ;AAEOxC,SAAAA;AACT;"}