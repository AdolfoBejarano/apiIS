{"version":3,"file":"themes.js","sources":["../../../src/components/codeinput/themes.ts"],"sourcesContent":["/**\n * Adapted from @uiw/codemirror-themes, @uiw/codemirror-theme-dracula, and\n * @uiw/codemirror-theme-github\n */\nimport {\n  HighlightStyle,\n  TagStyle,\n  syntaxHighlighting,\n} from \"@codemirror/language\";\nimport { EditorView } from \"@codemirror/view\";\nimport { tags as t } from \"@lezer/highlight\";\nimport { StyleSpec } from \"style-mod\";\n\nexport interface CreateThemeOptions {\n  /**\n   * Theme inheritance. Determines which styles CodeMirror will apply by default.\n   */\n  theme: \"light\" | \"dark\";\n  /**\n   * Settings to customize the look of the editor, like background, gutter, selection and others.\n   */\n  settings: Settings;\n  /** Syntax highlighting styles. */\n  styles: TagStyle[];\n}\n\nexport interface Settings {\n  /** Editor background. */\n  background: string;\n  /** Default text color. */\n  foreground: string;\n  /** Caret color. */\n  caret?: string;\n  /** Selection background. */\n  selection?: string;\n  /** Selection match background. */\n  selectionMatch?: string;\n  /** Background of highlighted lines. */\n  lineHighlight?: string;\n  /** Gutter background. */\n  gutterBackground?: string;\n  /** Text color inside gutter. */\n  gutterForeground?: string;\n  /** Text active color inside gutter. */\n  gutterActiveForeground?: string;\n  /** set editor font */\n  fontFamily?: string;\n}\n\nexport const createTheme = ({\n  theme,\n  settings,\n  styles,\n}: CreateThemeOptions) => {\n  const themeOptions: Record<string, StyleSpec> = {\n    \"&\": {\n      backgroundColor: settings.background,\n      backgroundClip: \"padding-box\",\n      color: settings.foreground,\n    },\n    \".cm-gutters\": { borderRight: \"none\" },\n    \"&.cm-editor.cm-focused\": { outline: \"none\" },\n    \"&.cm-editor .cm-scroller\": { fontSize: \"14px\" },\n    \".cm-tooltip\": { fontSize: \"14px\" },\n  };\n\n  if (settings.fontFamily) {\n    themeOptions[\"&.cm-editor .cm-scroller\"][\"fontFamily\"] =\n      settings.fontFamily;\n  }\n  if (settings.gutterBackground) {\n    themeOptions[\".cm-gutters\"].backgroundColor = settings.gutterBackground;\n  }\n  if (settings.gutterForeground) {\n    themeOptions[\".cm-gutters\"].color = settings.gutterForeground;\n  }\n\n  if (settings.caret) {\n    themeOptions[\".cm-content\"] = {\n      caretColor: settings.caret,\n    };\n    themeOptions[\".cm-cursor, .cm-dropCursor\"] = {\n      borderLeftColor: settings.caret,\n    };\n  }\n  const activeLineGutterStyle: StyleSpec = {};\n  if (settings.gutterActiveForeground) {\n    activeLineGutterStyle.color = settings.gutterActiveForeground;\n  }\n  if (settings.lineHighlight) {\n    themeOptions[\".cm-activeLine\"] = {\n      backgroundColor: settings.lineHighlight,\n    };\n    activeLineGutterStyle.backgroundColor = settings.lineHighlight;\n  }\n  themeOptions[\".cm-activeLineGutter\"] = activeLineGutterStyle;\n\n  if (settings.selection) {\n    themeOptions[\n      \"&.cm-focused .cm-selectionBackground, & .cm-selectionLayer .cm-selectionBackground, .cm-content ::selection\"\n    ] = {\n      backgroundColor: settings.selection,\n    };\n  }\n  if (settings.selectionMatch) {\n    themeOptions[\"& .cm-selectionMatch\"] = {\n      backgroundColor: settings.selectionMatch,\n    };\n  }\n  const themeExtension = EditorView.theme(themeOptions, {\n    dark: theme === \"dark\",\n  });\n\n  const highlightStyle = HighlightStyle.define(styles);\n  const extension = [themeExtension, syntaxHighlighting(highlightStyle)];\n\n  return extension;\n};\n\nexport const github = createTheme({\n  theme: \"light\",\n  settings: {\n    background: \"#fff\",\n    foreground: \"#24292e\",\n    selection: \"#BBDFFF\",\n    selectionMatch: \"#BBDFFF\",\n    gutterBackground: \"#fff\",\n    gutterForeground: \"#6e7781\",\n    fontFamily:\n      \"ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace\",\n  },\n  styles: [\n    { tag: [t.comment, t.bracket], color: \"#6a737d\" },\n    { tag: [t.className, t.propertyName], color: \"#6f42c1\" },\n    {\n      tag: [t.variableName, t.attributeName, t.number, t.operator],\n      color: \"#005cc5\",\n    },\n    {\n      tag: [t.keyword, t.typeName, t.typeOperator, t.typeName],\n      color: \"#d73a49\",\n    },\n    { tag: [t.string, t.meta, t.regexp], color: \"#032f62\" },\n    { tag: [t.name, t.quote], color: \"#22863a\" },\n    { tag: [t.heading], color: \"#24292e\", fontWeight: \"bold\" },\n    { tag: [t.emphasis], color: \"#24292e\", fontStyle: \"italic\" },\n    { tag: [t.deleted], color: \"#b31d28\", backgroundColor: \"ffeef0\" },\n  ],\n});\n\nexport const dracula = createTheme({\n  theme: \"dark\",\n  settings: {\n    background: \"#282a36\",\n    foreground: \"#f8f8f2\",\n    caret: \"#f8f8f0\",\n    selection: \"rgba(255, 255, 255, 0.1)\",\n    selectionMatch: \"rgba(255, 255, 255, 0.2)\",\n    gutterBackground: \"#282a36\",\n    gutterForeground: \"#6D8A88\",\n    lineHighlight: \"rgba(255, 255, 255, 0.1)\",\n    fontFamily:\n      \"ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace\",\n  },\n  styles: [\n    { tag: t.comment, color: \"#6272a4\" },\n    { tag: t.string, color: \"#f1fa8c\" },\n    { tag: t.atom, color: \"#bd93f9\" },\n    { tag: t.meta, color: \"#f8f8f2\" },\n    { tag: [t.keyword, t.operator, t.tagName], color: \"#ff79c6\" },\n    { tag: [t.function(t.propertyName), t.propertyName], color: \"#66d9ef\" },\n    {\n      tag: [\n        t.definition(t.variableName),\n        t.function(t.variableName),\n        t.className,\n        t.attributeName,\n      ],\n      color: \"#50fa7b\",\n    },\n    { tag: t.atom, color: \"#bd93f9\" },\n  ],\n});\n"],"names":["createTheme","theme","settings","styles","themeOptions","backgroundColor","background","backgroundClip","color","foreground","borderRight","outline","fontSize","fontFamily","gutterBackground","gutterForeground","caret","caretColor","borderLeftColor","activeLineGutterStyle","gutterActiveForeground","lineHighlight","selection","selectionMatch","themeExtension","EditorView","dark","highlightStyle","HighlightStyle","define","extension","syntaxHighlighting","github","tag","t","comment","bracket","className","propertyName","variableName","attributeName","number","operator","keyword","typeName","typeOperator","string","meta","regexp","name","quote","heading","fontWeight","emphasis","fontStyle","deleted","dracula","atom","tagName","function","definition"],"mappings":"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"}