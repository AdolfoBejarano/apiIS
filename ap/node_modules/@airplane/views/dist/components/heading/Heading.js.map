{"version":3,"file":"Heading.js","sources":["../../../src/components/heading/Heading.tsx"],"sourcesContent":["import { createStyles, Title as MantineTitle } from \"@mantine/core\";\nimport React from \"react\";\n\nimport { ComponentErrorBoundary } from \"components/errorBoundary/ComponentErrorBoundary\";\nimport { CommonLayoutProps } from \"components/layout/layout.types\";\nimport { useCommonLayoutStyle } from \"components/layout/useCommonLayoutStyle\";\nimport { CommonStylingProps } from \"components/styling.types\";\nimport { Color } from \"components/theme/colors\";\nimport { fontWeight, FontWeight } from \"components/theme/typography\";\n\ntype HeadingLevel = 1 | 2 | 3 | 4 | 5 | 6;\n\nexport type HeadingProps = {\n  /**\n   * Heading content.\n   */\n  children: React.ReactNode;\n  /**\n   * The size and style of the Heading with 1 being the largest and 6 being the smallest.\n   *\n   * @default 1\n   */\n  level?: HeadingLevel;\n  /**\n   * Heading color.\n   */\n  color?: Color;\n  /** Controls the font weight. */\n  weight?: FontWeight;\n  /**\n   * Adds italic style.\n   */\n  italic?: boolean;\n  /**\n   * Adds underline style.\n   */\n  underline?: boolean;\n  /**\n   * Adds strikethrough style.\n   */\n  strikethrough?: boolean;\n} & CommonLayoutProps &\n  CommonStylingProps;\n\nconst titleOrderToGrayShade = {\n  1: 9,\n  2: 8,\n  3: 8,\n  4: 7,\n  5: 7,\n  6: 7,\n};\n\ntype StyleParams = {\n  level: HeadingLevel;\n  weight?: FontWeight;\n};\n\nconst useStyles = createStyles((theme, { level, weight }: StyleParams) => {\n  const headingPreset = {\n    ...theme.other.typography.headingPreset[level],\n  };\n  if (weight) {\n    headingPreset.fontWeight = fontWeight[weight];\n  }\n  return {\n    root: {\n      ...headingPreset,\n      \"&:first-child\": {\n        marginTop: 0,\n      },\n    },\n  };\n});\n\nexport const HeadingComponent = ({\n  children,\n  className,\n  style,\n  level = 1,\n  color,\n  weight,\n  italic,\n  underline,\n  strikethrough,\n  width,\n  height,\n  grow,\n}: HeadingProps) => {\n  const { classes, cx } = useStyles({ level, weight });\n  const { classes: layoutClasses } = useCommonLayoutStyle({\n    width,\n    height,\n    grow,\n  });\n  return (\n    <MantineTitle\n      order={level}\n      style={style}\n      className={cx(classes.root, layoutClasses.style, className)}\n      color={color ?? `gray.${titleOrderToGrayShade[level]}`}\n      italic={italic}\n      underline={underline}\n      strikethrough={strikethrough}\n    >\n      {children}\n    </MantineTitle>\n  );\n};\n\nexport const Heading = (props: HeadingProps) => (\n  <ComponentErrorBoundary componentName={Heading.displayName}>\n    <HeadingComponent {...props} />\n  </ComponentErrorBoundary>\n);\nHeading.displayName = \"Heading\";\n"],"names":["titleOrderToGrayShade","useStyles","createStyles","theme","level","weight","headingPreset","other","typography","fontWeight","root","marginTop","HeadingComponent","children","className","style","color","italic","underline","strikethrough","width","height","grow","classes","cx","layoutClasses","useCommonLayoutStyle","MantineTitle","Heading","props","displayName"],"mappings":";;;;;AA4CA,MAAMA,wBAAwB;AAAA,EAC5B,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AACL;AAOA,MAAMC,YAAYC,aAAa,CAACC,OAAO;AAAA,EAAEC;AAAAA,EAAOC;AAAoB,MAAM;AACxE,QAAMC,gBAAgB;AAAA,IACpB,GAAGH,MAAMI,MAAMC,WAAWF,cAAcF,KAAK;AAAA,EAAA;AAE/C,MAAIC,QAAQ;AACII,kBAAAA,aAAaA,WAAWJ,MAAM;AAAA,EAC9C;AACO,SAAA;AAAA,IACLK,MAAM;AAAA,MACJ,GAAGJ;AAAAA,MACH,iBAAiB;AAAA,QACfK,WAAW;AAAA,MACb;AAAA,IACF;AAAA,EAAA;AAEJ,CAAC;AAEM,MAAMC,mBAAmBA,CAAC;AAAA,EAC/BC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAX,QAAQ;AAAA,EACRY;AAAAA,EACAX;AAAAA,EACAY;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AACY,MAAM;AACZ,QAAA;AAAA,IAAEC;AAAAA,IAASC;AAAAA,MAAOvB,UAAU;AAAA,IAAEG;AAAAA,IAAOC;AAAAA,EAAAA,CAAQ;AAC7C,QAAA;AAAA,IAAEkB,SAASE;AAAAA,MAAkBC,qBAAqB;AAAA,IACtDN;AAAAA,IACAC;AAAAA,IACAC;AAAAA,EAAAA,CACD;AAEC,SAAA,oBAACK,SACC,OAAOvB,OACP,OACA,WAAWoB,GAAGD,QAAQb,MAAMe,cAAcV,OAAOD,SAAS,GAC1D,OAAOE,SAAU,QAAOhB,sBAAsBI,KAAK,CAAE,IACrD,QACA,WACA,eAECS,SACH,CAAA;AAEJ;AAEO,MAAMe,UAAUA,CAACC,UACtB,oBAAC,wBAAuB,EAAA,eAAeD,QAAQE,aAC7C,UAAC,oBAAA,kBAAA,EAAiB,GAAID,MAAAA,CAAM,EAC9B,CAAA;AAEFD,QAAQE,cAAc;"}