{"version":3,"file":"DatePicker.js","sources":["../../../src/components/datepicker/DatePicker.tsx"],"sourcesContent":["import { createStyles } from \"@mantine/core\";\nimport { DatePicker as MantineDatePicker } from \"@mantine/dates\";\nimport React, { forwardRef, Ref } from \"react\";\n\nimport { ComponentErrorBoundary } from \"components/errorBoundary/ComponentErrorBoundary\";\nimport { useCommonLayoutStyle } from \"components/layout/useCommonLayoutStyle\";\nimport { useDatePickerState } from \"state/components/datepicker/useDatePickerState\";\nimport { useRegisterFormInput } from \"state/components/form/useRegisterFormInput\";\nimport { useInput } from \"state/components/input/useInput\";\nimport { useComponentId } from \"state/components/useId\";\n\nimport { DatePickerProps, DatePickerComponentProps } from \"./DatePicker.types\";\n\nconst useStyles = createStyles((theme) => {\n  return {\n    weekend: {\n      color: `${theme.colors.dark[6]} !important`,\n    },\n    selected: {\n      background: `${theme.colors.primary[5]} !important`,\n    },\n  };\n});\n\nexport const DatePickerComponent = forwardRef(\n  (\n    {\n      value,\n      clearable = false,\n      size = \"sm\",\n      onChange,\n      width,\n      height,\n      grow,\n      className,\n      style,\n      ...props\n    }: DatePickerComponentProps,\n    ref: React.Ref<HTMLInputElement>,\n  ) => {\n    const { classes, cx } = useStyles();\n    const { classes: layoutClasses } = useCommonLayoutStyle({\n      width,\n      height,\n      grow,\n    });\n    const onChangeMantine =\n      onChange && ((d: Date | null) => onChange(d ?? undefined));\n    return (\n      <MantineDatePicker\n        ref={ref}\n        value={value || null}\n        clearButtonLabel=\"clear\"\n        className={cx(layoutClasses.style, className)}\n        style={style}\n        dayClassName={(date, modifiers) =>\n          cx({\n            [classes.weekend]:\n              modifiers.weekend &&\n              !modifiers.outside &&\n              !modifiers.selected &&\n              !modifiers.disabled,\n            [classes.selected]: modifiers.selected,\n          })\n        }\n        allowFreeInput\n        clearable={clearable}\n        size={size}\n        inputFormat=\"MMM DD, YYYY\"\n        onChange={onChangeMantine}\n        {...props}\n      />\n    );\n  },\n);\nDatePickerComponent.displayName = \"DatePickerComponent\";\n\nexport const DatePicker = forwardRef(\n  (props: DatePickerProps, ref: Ref<HTMLInputElement>) => {\n    return (\n      <ComponentErrorBoundary componentName={DISPLAY_NAME}>\n        <DatePickerWithoutRef {...props} innerRef={ref} />\n      </ComponentErrorBoundary>\n    );\n  },\n);\nconst DISPLAY_NAME = \"DatePicker\";\nDatePicker.displayName = DISPLAY_NAME;\n\nexport const DatePickerWithoutRef = (\n  props: DatePickerProps & { innerRef: Ref<HTMLInputElement> },\n) => {\n  const id = useComponentId(props.id);\n  const { state, dispatch } = useDatePickerState(id, {\n    initialState: {\n      disabled: props.disabled ?? props.defaultDisabled,\n      value: props.value ?? props.defaultValue,\n    },\n  });\n  const { inputProps } = useInput(props, state, dispatch, (v) => v);\n  useRegisterFormInput(id, \"date-picker\");\n\n  const {\n    innerRef,\n    validate: _,\n    onChange: __,\n    defaultDisabled: ___,\n    defaultValue: ____,\n    ...restProps\n  } = props;\n  return <DatePickerComponent ref={innerRef} {...inputProps} {...restProps} />;\n};\n"],"names":["useStyles","createStyles","theme","weekend","color","colors","dark","selected","background","primary","DatePickerComponent","value","clearable","size","onChange","width","height","grow","className","style","props","ref","classes","cx","layoutClasses","useCommonLayoutStyle","onChangeMantine","d","undefined","MantineDatePicker","date","modifiers","outside","disabled","displayName","DatePicker","forwardRef","DISPLAY_NAME","DatePickerWithoutRef","id","useComponentId","state","dispatch","useDatePickerState","initialState","defaultDisabled","defaultValue","inputProps","useInput","v","useRegisterFormInput","innerRef","validate","_","__","___","____","restProps"],"mappings":";;;;;;;;;;AAaA,MAAMA,YAAYC,aAAcC,CAAU,UAAA;AACjC,SAAA;AAAA,IACLC,SAAS;AAAA,MACPC,OAAQ,GAAEF,MAAMG,OAAOC,KAAK,CAAC,CAAE;AAAA,IACjC;AAAA,IACAC,UAAU;AAAA,MACRC,YAAa,GAAEN,MAAMG,OAAOI,QAAQ,CAAC,CAAE;AAAA,IACzC;AAAA,EAAA;AAEJ,CAAC;AAEYC,MAAAA,iDACX,CACE;AAAA,EACEC;AAAAA,EACAC,YAAY;AAAA,EACZC,OAAO;AAAA,EACPC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACA,GAAGC;AACqB,GAC1BC,QACG;AACG,QAAA;AAAA,IAAEC;AAAAA,IAASC;AAAAA,MAAOvB,UAAU;AAC5B,QAAA;AAAA,IAAEsB,SAASE;AAAAA,MAAkBC,qBAAqB;AAAA,IACtDV;AAAAA,IACAC;AAAAA,IACAC;AAAAA,EAAAA,CACD;AACD,QAAMS,kBACJZ,aAAa,CAACa,MAAmBb,SAASa,KAAKC,MAAS;AAC1D,6BACGC,cACC,EAAA,KACA,OAAOlB,SAAS,MAChB,kBAAiB,SACjB,WAAWY,GAAGC,cAAcL,OAAOD,SAAS,GAC5C,OACA,cAAc,CAACY,MAAMC,cACnBR,GAAG;AAAA,IACD,CAACD,QAAQnB,OAAO,GACd4B,UAAU5B,WACV,CAAC4B,UAAUC,WACX,CAACD,UAAUxB,YACX,CAACwB,UAAUE;AAAAA,IACb,CAACX,QAAQf,QAAQ,GAAGwB,UAAUxB;AAAAA,EAC/B,CAAA,GAEH,gBAAc,MACd,WACA,MACA,aAAY,gBACZ,UAAUmB,iBACNN,GAAAA,MACJ,CAAA;AAEN,CACF;AACAV,oBAAoBwB,cAAc;AAE3B,MAAMC,aAAaC,2BACxB,CAAChB,OAAwBC,QAA+B;AAEpD,SAAA,oBAAC,wBAAuB,EAAA,eAAegB,cACrC,UAAA,oBAAC,wBAAyBjB,GAAAA,OAAO,UAAUC,IAAI,CAAA,EACjD,CAAA;AAEJ,CACF;AACA,MAAMgB,eAAe;AACrBF,WAAWD,cAAcG;AAEZC,MAAAA,uBAAuBA,CAClClB,UACG;AACGmB,QAAAA,KAAKC,eAAepB,MAAMmB,EAAE;AAC5B,QAAA;AAAA,IAAEE;AAAAA,IAAOC;AAAAA,EAAAA,IAAaC,mBAAmBJ,IAAI;AAAA,IACjDK,cAAc;AAAA,MACZX,UAAUb,MAAMa,YAAYb,MAAMyB;AAAAA,MAClClC,OAAOS,MAAMT,SAASS,MAAM0B;AAAAA,IAC9B;AAAA,EAAA,CACD;AACK,QAAA;AAAA,IAAEC;AAAAA,EAAAA,IAAeC,SAAS5B,OAAOqB,OAAOC,UAAWO,OAAMA,CAAC;AAChEC,uBAAqBX,IAAI,aAAa;AAEhC,QAAA;AAAA,IACJY;AAAAA,IACAC,UAAUC;AAAAA,IACVvC,UAAUwC;AAAAA,IACVT,iBAAiBU;AAAAA,IACjBT,cAAcU;AAAAA,IACd,GAAGC;AAAAA,EACDrC,IAAAA;AACJ,6BAAQ,qBAAoB,EAAA,KAAK+B,UAAU,GAAIJ,YAAgBU,GAAAA,UAAa,CAAA;AAC9E;"}