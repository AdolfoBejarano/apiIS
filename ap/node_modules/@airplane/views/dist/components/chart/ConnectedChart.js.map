{"version":3,"file":"ConnectedChart.js","sources":["../../../src/components/chart/ConnectedChart.tsx"],"sourcesContent":["import type { PlotSelectionEvent } from \"plotly.js-basic-dist\";\nimport React from \"react\";\n\nimport { useChartState } from \"state/components/chart\";\nimport { useComponentId } from \"state/components/useId\";\n\nimport { ConnectedChartProps } from \"./Chart.types\";\nimport { firstField, useNormalizedData } from \"./useNormalizedData\";\n\nconst ChartComponent = React.lazy(() => import(\"./ChartComponent\"));\n\nexport const ConnectedChart = ({ ...props }: ConnectedChartProps) => {\n  const [selectionIndexes, setSelectionIndexes] = React.useState(\n    new Map<string, number[]>(),\n  );\n  const data = useNormalizedData(props, selectionIndexes);\n\n  const onClearSelection = React.useCallback(() => {\n    setSelectionIndexes(new Map<string, number[]>());\n  }, [setSelectionIndexes]);\n\n  const id = useComponentId(props.id);\n  const { changeSelection } = useChartState(id, {\n    onClearSelection,\n  });\n\n  let xAxis = \"\";\n  if (\n    props.type === \"scatter\" ||\n    props.type === \"line\" ||\n    props.type === \"bar\"\n  ) {\n    if (props.data && Array.isArray(props.data) && props.data.length !== 0) {\n      xAxis = props?.xAxis ?? firstField(props.data);\n    }\n  }\n\n  const onSelected = React.useCallback(\n    (data: PlotSelectionEvent) => {\n      if (\n        props.type !== \"scatter\" &&\n        props.type !== \"line\" &&\n        props.type !== \"bar\"\n      ) {\n        return;\n      }\n      const newSelectionIndexes = new Map<string, number[]>();\n      for (const point of data.points) {\n        if (!newSelectionIndexes.has(point.data.name)) {\n          newSelectionIndexes.set(point.data.name, []);\n        }\n        newSelectionIndexes.get(point.data.name)?.push(point.pointIndex);\n      }\n      setSelectionIndexes(newSelectionIndexes);\n      const selectedPoints = data.points.map((point) => ({\n        [xAxis]: point.x,\n        [point.data.name]: point.y,\n      }));\n      changeSelection(selectedPoints);\n    },\n    [changeSelection, props.type, xAxis],\n  );\n  const onDeselect = React.useCallback(() => {\n    changeSelection([]);\n    setSelectionIndexes(new Map<string, number[]>());\n  }, [changeSelection]);\n\n  return (\n    <React.Suspense fallback={null}>\n      <ChartComponent\n        {...props}\n        normalizedData={data}\n        onSelected={onSelected}\n        onDeselect={onDeselect}\n      />\n    </React.Suspense>\n  );\n};\n"],"names":["ChartComponent","lazy","ConnectedChart","props","selectionIndexes","setSelectionIndexes","React","useState","Map","data","useNormalizedData","onClearSelection","useCallback","id","useComponentId","changeSelection","useChartState","xAxis","type","Array","isArray","length","firstField","onSelected","newSelectionIndexes","point","points","has","name","set","get","push","pointIndex","selectedPoints","map","x","y","onDeselect"],"mappings":";;;;;AASA,MAAMA,iBAAuBC,+BAAAA,KAAK,MAAM,OAAO,qBAAkB,CAAC;AAE3D,MAAMC,iBAAiBA,CAAC;AAAA,EAAE,GAAGC;AAA2B,MAAM;AAC7D,QAAA,CAACC,kBAAkBC,mBAAmB,IAAIC,eAAMC,SACpD,oBAAIC,KACN;AACMC,QAAAA,OAAOC,kBAAkBP,OAAOC,gBAAgB;AAEhDO,QAAAA,mBAAmBL,eAAMM,YAAY,MAAM;AAC3B,wBAAA,oBAAIJ,KAAuB;AAAA,EAAA,GAC9C,CAACH,mBAAmB,CAAC;AAElBQ,QAAAA,KAAKC,eAAeX,MAAMU,EAAE;AAC5B,QAAA;AAAA,IAAEE;AAAAA,EAAAA,IAAoBC,cAAcH,IAAI;AAAA,IAC5CF;AAAAA,EAAAA,CACD;AAED,MAAIM,QAAQ;AAEVd,MAAAA,MAAMe,SAAS,aACff,MAAMe,SAAS,UACff,MAAMe,SAAS,OACf;AACIf,QAAAA,MAAMM,QAAQU,MAAMC,QAAQjB,MAAMM,IAAI,KAAKN,MAAMM,KAAKY,WAAW,GAAG;AACtEJ,eAAQd,+BAAOc,UAASK,WAAWnB,MAAMM,IAAI;AAAA,IAC/C;AAAA,EACF;AAEA,QAAMc,aAAajB,eAAMM,YACvB,CAACH,UAA6B;;AAE1BN,QAAAA,MAAMe,SAAS,aACff,MAAMe,SAAS,UACff,MAAMe,SAAS,OACf;AACA;AAAA,IACF;AACMM,UAAAA,0CAA0BhB;AACrBiB,eAAAA,SAAShB,MAAKiB,QAAQ;AAC/B,UAAI,CAACF,oBAAoBG,IAAIF,MAAMhB,KAAKmB,IAAI,GAAG;AAC7CJ,4BAAoBK,IAAIJ,MAAMhB,KAAKmB,MAAM,CAAE,CAAA;AAAA,MAC7C;AACAJ,gCAAoBM,IAAIL,MAAMhB,KAAKmB,IAAI,MAAvCJ,mBAA0CO,KAAKN,MAAMO;AAAAA,IACvD;AACA3B,wBAAoBmB,mBAAmB;AACvC,UAAMS,iBAAiBxB,MAAKiB,OAAOQ,IAAKT,CAAW,WAAA;AAAA,MACjD,CAACR,KAAK,GAAGQ,MAAMU;AAAAA,MACf,CAACV,MAAMhB,KAAKmB,IAAI,GAAGH,MAAMW;AAAAA,IACzB,EAAA;AACFrB,oBAAgBkB,cAAc;AAAA,KAEhC,CAAClB,iBAAiBZ,MAAMe,MAAMD,KAAK,CACrC;AACMoB,QAAAA,aAAa/B,eAAMM,YAAY,MAAM;AACzCG,oBAAgB,CAAE,CAAA;AACE,wBAAA,oBAAIP,KAAuB;AAAA,EAAA,GAC9C,CAACO,eAAe,CAAC;AAEpB,SACG,oBAAAT,eAAM,UAAN,EAAe,UAAU,MACxB,UAAA,oBAAC,gBACC,EAAA,GAAIH,OACJ,gBAAgBM,MAChB,YACA,YAAuB,EAE3B,CAAA;AAEJ;"}