{"version":3,"file":"Chart.js","sources":["../../../src/components/chart/Chart.tsx"],"sourcesContent":["import { useState } from \"react\";\n\nimport { DefaultOutput, DefaultParams, ParamValues } from \"client\";\nimport { ComponentErrorBoundary } from \"components/errorBoundary/ComponentErrorBoundary\";\nimport { LatestRun } from \"components/errorBoundary/LatestRunDetails\";\n\nimport { ChartProps } from \"./Chart.types\";\nimport { doesUseTask, ChartWithTask } from \"./ChartWithTask\";\nimport { ConnectedChart } from \"./ConnectedChart\";\n\nexport const Chart = <\n  TParams extends ParamValues | undefined = DefaultParams,\n  TOutput = DefaultOutput,\n>(\n  props: ChartProps<TParams, TOutput>,\n) => {\n  const usesTask = doesUseTask<TParams, TOutput>(props);\n  const [latestRun, setLatestRun] = useState<LatestRun>();\n\n  if (usesTask) {\n    return (\n      <ComponentErrorBoundary\n        componentName={Chart.displayName}\n        latestRun={latestRun}\n      >\n        <ChartWithTask {...props} setLatestRun={setLatestRun} />\n      </ComponentErrorBoundary>\n    );\n  } else {\n    return (\n      <ComponentErrorBoundary componentName={Chart.displayName}>\n        <ConnectedChart {...props} />\n      </ComponentErrorBoundary>\n    );\n  }\n};\n\nChart.displayName = \"Chart\";\n"],"names":["Chart","props","usesTask","doesUseTask","latestRun","setLatestRun","useState","displayName"],"mappings":";;;;;AAUaA,MAAAA,QAAQ,CAInBC,UACG;AACGC,QAAAA,WAAWC,YAA8BF,KAAK;AACpD,QAAM,CAACG,WAAWC,YAAY,IAAIC,SAAoB;AAEtD,MAAIJ,UAAU;AAEV,WAAA,oBAAC,wBACC,EAAA,eAAeF,MAAMO,aACrB,WAEA,UAAA,oBAAC,eAAkBN,EAAAA,GAAAA,OAAO,aAAA,CAA2B,EACvD,CAAA;AAAA,EAAA,OAEG;AAEH,WAAA,oBAAC,0BAAuB,eAAeD,MAAMO,aAC3C,UAAC,oBAAA,gBAAA,EAAe,GAAIN,MAAM,CAAA,EAC5B,CAAA;AAAA,EAEJ;AACF;AAEAD,MAAMO,cAAc;"}