{"version":3,"file":"useMultiInputState.js","sources":["../../../../src/state/components/multiInput/useMultiInputState.ts"],"sourcesContent":["import { Dispatch, useMemo, useReducer } from \"react\";\n\nimport { ComponentType, useSyncComponentState } from \"state/context/context\";\n\nimport { Action, reducer } from \"./reducer\";\nimport { InitialMultiInputState, MultiInputState } from \"./state\";\nimport { useStateSetters } from \"../input/useStateSetters\";\n\nexport type MultiInputHookOptions<T> = {\n  initialState?: InitialMultiInputState<T>;\n};\n\n/**\n * useMultiInputState is a hook that creates and manages a MultiInput's state on the\n * Airplane context\n */\nexport const useMultiInputState = <T>(\n  id: string,\n  options?: MultiInputHookOptions<T>,\n): { state: MultiInputState<T[]>; dispatch: Dispatch<Action<T[]>> } => {\n  const initialState = {\n    id,\n    componentType: ComponentType.MultiInput,\n    value: options?.initialState?.value ?? [],\n    disabled: options?.initialState?.disabled ?? false,\n  };\n\n  const [internalState, dispatch] = useReducer(reducer<T[]>, {\n    ...initialState,\n    showErrors: false,\n    errors: [],\n  });\n  const stateSetters = useStateSetters(dispatch, initialState);\n\n  const state: MultiInputState<T[]> = useMemo(\n    () => ({\n      ...internalState,\n      ...stateSetters,\n      id,\n      componentType: ComponentType.MultiInput,\n    }),\n    [internalState, stateSetters, id],\n  );\n  useSyncComponentState(id, state);\n\n  return { state, dispatch };\n};\n"],"names":["useMultiInputState","id","options","initialState","componentType","ComponentType","MultiInput","value","disabled","internalState","dispatch","useReducer","reducer","showErrors","errors","stateSetters","useStateSetters","state","useMemo","useSyncComponentState"],"mappings":";;;;AAgBaA,MAAAA,qBAAqB,CAChCC,IACAC,YACqE;;AACrE,QAAMC,eAAe;AAAA,IACnBF;AAAAA,IACAG,eAAeC,cAAcC;AAAAA,IAC7BC,SAAOL,wCAASC,iBAATD,mBAAuBK,UAAS,CAAE;AAAA,IACzCC,YAAUN,wCAASC,iBAATD,mBAAuBM,aAAY;AAAA,EAAA;AAG/C,QAAM,CAACC,eAAeC,QAAQ,IAAIC,WAAWC,SAAc;AAAA,IACzD,GAAGT;AAAAA,IACHU,YAAY;AAAA,IACZC,QAAQ,CAAA;AAAA,EAAA,CACT;AACKC,QAAAA,eAAeC,gBAAgBN,UAAUP,YAAY;AAErDc,QAAAA,QAA8BC,QAClC,OAAO;AAAA,IACL,GAAGT;AAAAA,IACH,GAAGM;AAAAA,IACHd;AAAAA,IACAG,eAAeC,cAAcC;AAAAA,EAE/B,IAAA,CAACG,eAAeM,cAAcd,EAAE,CAClC;AACAkB,wBAAsBlB,IAAIgB,KAAK;AAExB,SAAA;AAAA,IAAEA;AAAAA,IAAOP;AAAAA,EAAAA;AAClB;"}