{"version":3,"file":"useFormState.js","sources":["../../../../src/state/components/form/useFormState.ts"],"sourcesContent":["import { useCallback, useMemo } from \"react\";\n\nimport { ComponentType, useSyncComponentState } from \"state/context/context\";\n\nimport { InputValues } from \"./state\";\nimport { adaptInputsToValues, useFormInputs } from \"./useFormInputs\";\n\n/**\n * useFormState is a hook that creates and manages a Form's state on the\n * Airplane context\n */\nexport const useFormState = (id: string) => {\n  const inputData = useFormInputs();\n\n  const reset = useCallback(() => {\n    const inputResets = Object.values(inputData).map(\n      (input) => input.state.reset,\n    );\n    for (const inputReset of inputResets) {\n      inputReset();\n    }\n  }, [inputData]);\n\n  const values = useMemo(() => {\n    return adaptInputsToValues(inputData);\n  }, [inputData]);\n\n  const setValues = useCallback(\n    (values: InputValues) => {\n      Object.entries(values).forEach(([id, value]) => {\n        const inputState = inputData[id]?.state;\n        if (inputState) {\n          inputState.setValue(value as never);\n        }\n      });\n    },\n    [inputData],\n  );\n\n  const state = useMemo(\n    () => ({\n      id,\n      /** The values of the form inputs as a map of input id => value. */\n      values,\n      /** Sets the values of the form inputs from a map of input id => value. */\n      setValues,\n      /** Resets each of the form inputs. */\n      reset,\n      componentType: ComponentType.Form,\n    }),\n    [id, values, reset, setValues],\n  );\n  useSyncComponentState(id, state);\n\n  return state;\n};\n"],"names":["useFormState","id","inputData","useFormInputs","reset","useCallback","inputResets","Object","values","map","input","state","inputReset","useMemo","adaptInputsToValues","setValues","entries","forEach","value","inputState","setValue","componentType","ComponentType","Form","useSyncComponentState"],"mappings":";;;AAWaA,MAAAA,eAAeA,CAACC,OAAe;AAC1C,QAAMC,YAAYC;AAEZC,QAAAA,QAAQC,YAAY,MAAM;AACxBC,UAAAA,cAAcC,OAAOC,OAAON,SAAS,EAAEO,IAC1CC,CAAAA,UAAUA,MAAMC,MAAMP,KACzB;AACA,eAAWQ,cAAcN,aAAa;AACzB;IACb;AAAA,EAAA,GACC,CAACJ,SAAS,CAAC;AAERM,QAAAA,SAASK,QAAQ,MAAM;AAC3B,WAAOC,oBAAoBZ,SAAS;AAAA,EAAA,GACnC,CAACA,SAAS,CAAC;AAERa,QAAAA,YAAYV,YAChB,CAACG,YAAwB;AAChBQ,WAAAA,QAAQR,OAAM,EAAES,QAAQ,CAAC,CAAChB,KAAIiB,KAAK,MAAM;;AACxCC,YAAAA,cAAajB,eAAUD,GAAE,MAAZC,mBAAeS;AAClC,UAAIQ,YAAY;AACdA,mBAAWC,SAASF,KAAe;AAAA,MACrC;AAAA,IAAA,CACD;AAAA,EAAA,GAEH,CAAChB,SAAS,CACZ;AAEMS,QAAAA,QAAQE,QACZ,OAAO;AAAA,IACLZ;AAAAA;AAAAA,IAEAO;AAAAA;AAAAA,IAEAO;AAAAA;AAAAA,IAEAX;AAAAA,IACAiB,eAAeC,cAAcC;AAAAA,EAAAA,IAE/B,CAACtB,IAAIO,QAAQJ,OAAOW,SAAS,CAC/B;AACAS,wBAAsBvB,IAAIU,KAAK;AAExBA,SAAAA;AACT;"}