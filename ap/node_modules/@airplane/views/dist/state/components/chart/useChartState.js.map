{"version":3,"file":"useChartState.js","sources":["../../../../src/state/components/chart/useChartState.ts"],"sourcesContent":["import { useCallback, useMemo, useReducer, Reducer } from \"react\";\n\nimport { ComponentType, useSyncComponentState } from \"state/context/context\";\n\nimport { reducer, ReducerState, Action } from \"./reducer\";\nimport { ChartState, SelectedPoint } from \"./state\";\n\nexport type ChartHookOptions = {\n  /** Callback that triggers when the clearSelection function is called. */\n  onClearSelection?: () => void;\n};\n\n/**\n * useChartState is a hook that creates and manages a Chart's state on the\n * Airplane context\n */\nexport const useChartState = (\n  id: string,\n  options: ChartHookOptions,\n): ChartState => {\n  const [internalState, dispatch] = useReducer<Reducer<ReducerState, Action>>(\n    reducer,\n    {\n      selectedPoints: [],\n    },\n  );\n\n  const changeSelection = useCallback((points: SelectedPoint[]) => {\n    dispatch({\n      type: \"changeSelection\",\n      points,\n    });\n  }, []);\n\n  const optionsOnClearSelection = options.onClearSelection;\n  const clearSelection = useCallback(() => {\n    changeSelection([]);\n    optionsOnClearSelection?.();\n  }, [changeSelection, optionsOnClearSelection]);\n\n  const state: ChartState = useMemo(\n    () => ({\n      id,\n      selectedPoints: internalState.selectedPoints,\n      changeSelection,\n      clearSelection,\n      componentType: ComponentType.Chart,\n    }),\n    [id, changeSelection, clearSelection, internalState.selectedPoints],\n  );\n  useSyncComponentState(id, state);\n\n  return state;\n};\n"],"names":["useChartState","id","options","internalState","dispatch","useReducer","reducer","selectedPoints","changeSelection","useCallback","points","type","optionsOnClearSelection","onClearSelection","clearSelection","state","useMemo","componentType","ComponentType","Chart","useSyncComponentState"],"mappings":";;;AAgBaA,MAAAA,gBAAgBA,CAC3BC,IACAC,YACe;AACf,QAAM,CAACC,eAAeC,QAAQ,IAAIC,WAChCC,SACA;AAAA,IACEC,gBAAgB,CAAA;AAAA,EAAA,CAEpB;AAEMC,QAAAA,kBAAkBC,YAAY,CAACC,WAA4B;AACtD,aAAA;AAAA,MACPC,MAAM;AAAA,MACND;AAAAA,IAAAA,CACD;AAAA,EACH,GAAG,CAAE,CAAA;AAEL,QAAME,0BAA0BV,QAAQW;AAClCC,QAAAA,iBAAiBL,YAAY,MAAM;AACvCD,oBAAgB,CAAE,CAAA;AACQ;AAAA,EAAA,GACzB,CAACA,iBAAiBI,uBAAuB,CAAC;AAEvCG,QAAAA,QAAoBC,QACxB,OAAO;AAAA,IACLf;AAAAA,IACAM,gBAAgBJ,cAAcI;AAAAA,IAC9BC;AAAAA,IACAM;AAAAA,IACAG,eAAeC,cAAcC;AAAAA,EAAAA,IAE/B,CAAClB,IAAIO,iBAAiBM,gBAAgBX,cAAcI,cAAc,CACpE;AACAa,wBAAsBnB,IAAIc,KAAK;AAExBA,SAAAA;AACT;"}