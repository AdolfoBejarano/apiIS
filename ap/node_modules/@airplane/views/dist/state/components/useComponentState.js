import { useContext, useMemo } from "react";
import { useComponentId } from "./useId.js";
import { ComponentStateContext, DefaultComponentState } from "../context/context.js";
const useComponentState = (id) => {
  const stateContext = useContext(ComponentStateContext);
  const componentID = useComponentId(id);
  const componentState = stateContext.components[componentID];
  return useMemo(() => {
    return componentState || {
      ...DefaultComponentState,
      id: componentID
    };
  }, [componentState, componentID]);
};
const useComponentStates = (ids) => {
  const stateContext = useContext(ComponentStateContext);
  return useMemo(() => ids.reduce((obj, id) => Object.assign(obj, {
    [id]: stateContext.components[id] || {
      ...DefaultComponentState,
      id
    }
  }), {}), [ids, stateContext.components]);
};
export {
  useComponentState,
  useComponentStates
};
//# sourceMappingURL=useComponentState.js.map
