{"version":3,"file":"state.js","sources":["../../../../src/state/components/text-input/state.ts"],"sourcesContent":["import { InputState } from \"state/components/input/reducer\";\nimport { StateSetters } from \"state/components/input/useStateSetters\";\n\nimport { TextInputTValue } from \"./reducer\";\nimport { BaseState, DefaultState } from \"../BaseState\";\n\nexport type TextInputState = {\n  focus: () => void;\n} & BaseState &\n  InputState<TextInputTValue> &\n  StateSetters<TextInputTValue>;\nexport type CodeInputState = TextInputState;\n\nexport type InitialTextInputState = {\n  value?: string;\n  disabled?: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst emptyFn = () => {};\nexport const DefaultTextInputState: DefaultState<TextInputState> = {\n  value: undefined,\n  setValue: emptyFn,\n  disabled: false,\n  setDisabled: emptyFn,\n  focus: emptyFn,\n  errors: [],\n  showErrors: false,\n  setShowErrors: emptyFn,\n  reset: emptyFn,\n};\n"],"names":["emptyFn","DefaultTextInputState","value","undefined","setValue","disabled","setDisabled","focus","errors","showErrors","setShowErrors","reset"],"mappings":"AAmBA,MAAMA,UAAUA,MAAM;AAAC;AAChB,MAAMC,wBAAsD;AAAA,EACjEC,OAAOC;AAAAA,EACPC,UAAUJ;AAAAA,EACVK,UAAU;AAAA,EACVC,aAAaN;AAAAA,EACbO,OAAOP;AAAAA,EACPQ,QAAQ,CAAE;AAAA,EACVC,YAAY;AAAA,EACZC,eAAeV;AAAAA,EACfW,OAAOX;AACT;"}