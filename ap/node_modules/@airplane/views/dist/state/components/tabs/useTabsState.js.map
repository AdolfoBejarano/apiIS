{"version":3,"file":"useTabsState.js","sources":["../../../../src/state/components/tabs/useTabsState.ts"],"sourcesContent":["import { useCallback, useMemo, useReducer } from \"react\";\n\nimport { ComponentType, useSyncComponentState } from \"state/context/context\";\n\nimport { reducer } from \"./reducer\";\nimport { InitialTabsState, TabsState, TabsValue } from \"./state\";\n\nexport type TabsHookOptions = {\n  initialState?: InitialTabsState;\n};\n\n/**\n * useTabsState is a hook that creates and manages a Tabs component's state on the\n * Airplane context\n */\nexport const useTabsState = (\n  id: string,\n  options?: TabsHookOptions,\n): TabsState => {\n  const [internalState, dispatch] = useReducer(reducer, {\n    value: options?.initialState?.value,\n  });\n\n  const setValue = useCallback((value: TabsValue) => {\n    dispatch({\n      type: \"setValue\",\n      value,\n    });\n  }, []);\n\n  const state: TabsState = useMemo(\n    () => ({\n      id,\n      setValue,\n      value: internalState.value,\n      componentType: ComponentType.Tabs,\n    }),\n    [id, internalState.value, setValue],\n  );\n  useSyncComponentState(id, state);\n\n  return state;\n};\n"],"names":["useTabsState","id","options","internalState","dispatch","useReducer","reducer","value","initialState","setValue","useCallback","type","state","useMemo","componentType","ComponentType","Tabs","useSyncComponentState"],"mappings":";;;AAeaA,MAAAA,eAAeA,CAC1BC,IACAC,YACc;;AACd,QAAM,CAACC,eAAeC,QAAQ,IAAIC,WAAWC,SAAS;AAAA,IACpDC,QAAOL,wCAASM,iBAATN,mBAAuBK;AAAAA,EAAAA,CAC/B;AAEKE,QAAAA,WAAWC,YAAY,CAACH,UAAqB;AACxC,aAAA;AAAA,MACPI,MAAM;AAAA,MACNJ;AAAAA,IAAAA,CACD;AAAA,EACH,GAAG,CAAE,CAAA;AAECK,QAAAA,QAAmBC,QACvB,OAAO;AAAA,IACLZ;AAAAA,IACAQ;AAAAA,IACAF,OAAOJ,cAAcI;AAAAA,IACrBO,eAAeC,cAAcC;AAAAA,EAAAA,IAE/B,CAACf,IAAIE,cAAcI,OAAOE,QAAQ,CACpC;AACAQ,wBAAsBhB,IAAIW,KAAK;AAExBA,SAAAA;AACT;"}