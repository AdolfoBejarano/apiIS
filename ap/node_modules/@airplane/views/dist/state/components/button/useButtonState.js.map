{"version":3,"file":"useButtonState.js","sources":["../../../../src/state/components/button/useButtonState.ts"],"sourcesContent":["import { useCallback, useMemo, useReducer } from \"react\";\n\nimport { ComponentType, useSyncComponentState } from \"state/context/context\";\n\nimport { reducer } from \"./reducer\";\nimport { ButtonState } from \"./state\";\n\n/**\n * useButton is a hook that creates and manages a Button's state on the\n * Airplane context\n */\n\nexport const useButtonState = (id: string): ButtonState => {\n  const [internalState, dispatch] = useReducer(reducer, {\n    result: null,\n  });\n\n  const setResult: ButtonState[\"setResult\"] = useCallback((result) => {\n    dispatch({\n      type: \"setResult\",\n      result,\n    });\n  }, []);\n  const state: ButtonState = useMemo(\n    () => ({\n      id,\n      result: internalState.result,\n      setResult,\n      componentType: ComponentType.Button,\n    }),\n    [id, internalState.result, setResult],\n  );\n  useSyncComponentState(id, state);\n\n  return state;\n};\n"],"names":["useButtonState","id","internalState","dispatch","useReducer","reducer","result","setResult","useCallback","type","state","useMemo","componentType","ComponentType","Button","useSyncComponentState"],"mappings":";;;AAYaA,MAAAA,iBAAiBA,CAACC,OAA4B;AACzD,QAAM,CAACC,eAAeC,QAAQ,IAAIC,WAAWC,SAAS;AAAA,IACpDC,QAAQ;AAAA,EAAA,CACT;AAEKC,QAAAA,YAAsCC,YAAaF,CAAW,WAAA;AACzD,aAAA;AAAA,MACPG,MAAM;AAAA,MACNH;AAAAA,IAAAA,CACD;AAAA,EACH,GAAG,CAAE,CAAA;AACCI,QAAAA,QAAqBC,QACzB,OAAO;AAAA,IACLV;AAAAA,IACAK,QAAQJ,cAAcI;AAAAA,IACtBC;AAAAA,IACAK,eAAeC,cAAcC;AAAAA,EAAAA,IAE/B,CAACb,IAAIC,cAAcI,QAAQC,SAAS,CACtC;AACAQ,wBAAsBd,IAAIS,KAAK;AAExBA,SAAAA;AACT;"}