import { useReducer, useMemo } from "react";
import { useStateSetters } from "../input/useStateSetters.js";
import { ComponentType, useSyncComponentState } from "../../context/context.js";
import { reducer } from "./reducer.js";
const INITIAL_VALUE = [];
const useMultiSelectState = (id, options) => {
  var _a, _b;
  const initialState = {
    value: ((_a = options == null ? void 0 : options.initialState) == null ? void 0 : _a.value) ?? INITIAL_VALUE,
    disabled: ((_b = options == null ? void 0 : options.initialState) == null ? void 0 : _b.disabled) ?? false
  };
  const [internalState, dispatch] = useReducer(reducer, {
    ...initialState,
    showErrors: false,
    errors: []
  });
  const stateSetters = useStateSetters(dispatch, initialState);
  const state = useMemo(() => ({
    ...internalState,
    ...stateSetters,
    id,
    componentType: ComponentType.MultiSelect
  }), [internalState, id, stateSetters]);
  useSyncComponentState(id, state);
  return {
    state,
    dispatch
  };
};
export {
  useMultiSelectState
};
//# sourceMappingURL=useMultiSelectState.js.map
