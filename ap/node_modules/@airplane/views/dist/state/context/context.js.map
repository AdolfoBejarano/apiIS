{"version":3,"file":"context.js","sources":["../../../src/state/context/context.ts"],"sourcesContent":["import { createContext, useContext, useEffect } from \"react\";\n\nimport { MultiInputState } from \"state/components/multiInput/state\";\n\nimport { DefaultBooleanState, BooleanState } from \"../components/boolean/state\";\nimport { DefaultButtonState, ButtonState } from \"../components/button/state\";\nimport { DefaultChartState, ChartState } from \"../components/chart/state\";\nimport {\n  DatePickerState,\n  DefaultDatePickerState,\n} from \"../components/datepicker/state\";\nimport { DialogState, DefaultDialogState } from \"../components/dialog/state\";\nimport {\n  FileInputState,\n  DefaultFileInputState,\n} from \"../components/file-input/state\";\nimport { DefaultFormState, FormState } from \"../components/form/state\";\nimport {\n  DefaultMultiSelectState,\n  MultiSelectState,\n} from \"../components/multiselect/state\";\nimport {\n  DefaultNumberInputState,\n  NumberInputState,\n} from \"../components/number-input/state\";\nimport {\n  DefaultRadioGroupState,\n  RadioGroupState,\n} from \"../components/radio-group/state\";\nimport { DefaultSelectState, SelectState } from \"../components/select/state\";\nimport { DefaultTableState, TableState } from \"../components/table/state\";\nimport { DefaultTabsState, TabsState } from \"../components/tabs/state\";\nimport {\n  DefaultTextInputState,\n  TextInputState,\n} from \"../components/text-input/state\";\n\n// Human-readable names for all components with state\nexport enum ComponentType {\n  Table = \"Table\",\n  NumberInput = \"NumberInput\",\n  Slider = \"Slider\",\n  TextInput = \"TextInput\",\n  Textarea = \"Textarea\",\n  CodeInput = \"CodeInput\",\n  Select = \"Select\",\n  MultiSelect = \"MultiSelect\",\n  Button = \"Button\",\n  DatePicker = \"DatePicker\",\n  DateTimePicker = \"DateTimePicker\",\n  FileInput = \"FileInput\",\n  Dialog = \"Dialog\",\n  Form = \"Form\",\n  RadioGroup = \"RadioGroup\",\n  Chart = \"Chart\",\n  Tabs = \"Tabs\",\n  Checkbox = \"Checkbox\",\n  Switch = \"Switch\",\n  MultiInput = \"MultiInput\",\n}\n\nexport type ComponentState =\n  | TableState\n  | NumberInputState\n  | TextInputState\n  | SelectState\n  | MultiSelectState\n  | BooleanState\n  | ButtonState\n  | DialogState\n  | DatePickerState\n  | FileInputState\n  | FormState\n  | RadioGroupState\n  | ChartState\n  | TabsState\n  | MultiInputState<unknown>;\n\nexport type InputComponentState =\n  | SelectState\n  | MultiSelectState\n  | BooleanState\n  | NumberInputState\n  | TextInputState\n  | DatePickerState\n  | FileInputState\n  | RadioGroupState;\n\nexport const DefaultComponentState = {\n  ...DefaultTableState,\n  ...DefaultNumberInputState,\n  ...DefaultTextInputState,\n  ...DefaultSelectState,\n  ...DefaultMultiSelectState,\n  ...DefaultBooleanState,\n  ...DefaultButtonState,\n  ...DefaultDatePickerState,\n  ...DefaultFileInputState,\n  ...DefaultDialogState,\n  ...DefaultFormState,\n  ...DefaultRadioGroupState,\n  ...DefaultChartState,\n  ...DefaultTabsState,\n};\n\nexport type ComponentStateContextType = {\n  components: Record<string, ComponentState>;\n  updateComponent: <TState extends ComponentState>(\n    id: string,\n    state: TState,\n  ) => void;\n  removeComponent: (id: string) => void;\n};\n\nconst defaultContext: ComponentStateContextType = {\n  components: {},\n  updateComponent: () => {\n    // Unimplemented\n  },\n  removeComponent: () => {\n    // Unimplemented\n  },\n};\n\nexport const ComponentStateContext =\n  createContext<ComponentStateContextType>(defaultContext);\n\n/**\n * useSyncComponentState keeps component state in sync with the global component state store\n */\nexport const useSyncComponentState = <TState extends ComponentState>(\n  id: string,\n  state: TState,\n) => {\n  const { updateComponent, removeComponent } = useContext(\n    ComponentStateContext,\n  );\n  useEffect(() => {\n    updateComponent<TState>(id, state);\n  }, [updateComponent, id, state]);\n\n  useEffect(() => {\n    return () => removeComponent(id);\n  }, [removeComponent, id]);\n};\n"],"names":["ComponentType","Table","NumberInput","Slider","TextInput","Textarea","CodeInput","Select","MultiSelect","Button","DatePicker","DateTimePicker","FileInput","Dialog","Form","RadioGroup","Chart","Tabs","Checkbox","Switch","MultiInput","DefaultComponentState","DefaultTableState","DefaultNumberInputState","DefaultTextInputState","DefaultSelectState","DefaultMultiSelectState","DefaultBooleanState","DefaultButtonState","DefaultDatePickerState","DefaultFileInputState","DefaultDialogState","DefaultFormState","DefaultRadioGroupState","DefaultChartState","DefaultTabsState","defaultContext","components","updateComponent","removeComponent","ComponentStateContext","useSyncComponentState","id","state","useContext","useEffect"],"mappings":";;;;;;;;;;;;;;;AAsCYA,IAAAA,kCAAAA,mBAAL;AACLC,iBAAAA,OAAQ,IAAA;AACRC,iBAAAA,aAAc,IAAA;AACdC,iBAAAA,QAAS,IAAA;AACTC,iBAAAA,WAAY,IAAA;AACZC,iBAAAA,UAAW,IAAA;AACXC,iBAAAA,WAAY,IAAA;AACZC,iBAAAA,QAAS,IAAA;AACTC,iBAAAA,aAAc,IAAA;AACdC,iBAAAA,QAAS,IAAA;AACTC,iBAAAA,YAAa,IAAA;AACbC,iBAAAA,gBAAiB,IAAA;AACjBC,iBAAAA,WAAY,IAAA;AACZC,iBAAAA,QAAS,IAAA;AACTC,iBAAAA,MAAO,IAAA;AACPC,iBAAAA,YAAa,IAAA;AACbC,iBAAAA,OAAQ,IAAA;AACRC,iBAAAA,MAAO,IAAA;AACPC,iBAAAA,UAAW,IAAA;AACXC,iBAAAA,QAAS,IAAA;AACTC,iBAAAA,YAAa,IAAA;AApBHpB,SAAAA;AAAAA,GAAAA,iBAAAA,CAAAA,CAAAA;AAkDL,MAAMqB,wBAAwB;AAAA,EACnC,GAAGC;AAAAA,EACH,GAAGC;AAAAA,EACH,GAAGC;AAAAA,EACH,GAAGC;AAAAA,EACH,GAAGC;AAAAA,EACH,GAAGC;AAAAA,EACH,GAAGC;AAAAA,EACH,GAAGC;AAAAA,EACH,GAAGC;AAAAA,EACH,GAAGC;AAAAA,EACH,GAAGC;AAAAA,EACH,GAAGC;AAAAA,EACH,GAAGC;AAAAA,EACH,GAAGC;AACL;AAWA,MAAMC,iBAA4C;AAAA,EAChDC,YAAY,CAAC;AAAA,EACbC,iBAAiBA,MAAM;AAAA,EACrB;AAAA,EAEFC,iBAAiBA,MAAM;AAAA,EACrB;AAEJ;AAEaC,MAAAA,sDAC8BJ,cAAc;AAK5CK,MAAAA,wBAAwB,CACnCC,IACAC,UACG;AACG,QAAA;AAAA,IAAEL;AAAAA,IAAiBC;AAAAA,EAAAA,IAAoBK,WAC3CJ,qBACF;AACAK,YAAU,MAAM;AACdP,oBAAwBI,IAAIC,KAAK;AAAA,EAChC,GAAA,CAACL,iBAAiBI,IAAIC,KAAK,CAAC;AAE/BE,YAAU,MAAM;AACP,WAAA,MAAMN,gBAAgBG,EAAE;AAAA,EAAA,GAC9B,CAACH,iBAAiBG,EAAE,CAAC;AAC1B;"}