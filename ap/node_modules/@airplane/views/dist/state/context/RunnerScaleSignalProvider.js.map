{"version":3,"file":"RunnerScaleSignalProvider.js","sources":["../../../src/state/context/RunnerScaleSignalProvider.tsx"],"sourcesContent":["import React, { createContext } from \"react\";\n\nimport { RUNNER_SCALE_SIGNAL_CREATE } from \"client/endpoints\";\nimport { Fetcher } from \"client/fetcher\";\n\nexport type RunnerScaleSignal = {\n  signalKey: string;\n  expirationDurationSeconds: number;\n  taskSlug: string;\n};\n\nexport class RunnerScaleSignalContextType {\n  private lastSent: Map<string, Date>;\n\n  constructor() {\n    this.lastSent = new Map<string, Date>();\n    this.createScaleSignal = this.createScaleSignal.bind(this);\n  }\n\n  getMapKey(signal: RunnerScaleSignal) {\n    return signal.signalKey + \"~\" + signal.taskSlug;\n  }\n\n  async createScaleSignal(signal: RunnerScaleSignal) {\n    const mapKey = this.getMapKey(signal);\n    const lastSentDate = this.lastSent.get(mapKey);\n    const now = new Date();\n    // We only send each signal once a minute at most.\n    if (!lastSentDate || new Date(now.getTime() - 60 * 1000) > lastSentDate) {\n      this.lastSent.set(mapKey, now);\n      const fetcher = new Fetcher();\n      await fetcher.post(RUNNER_SCALE_SIGNAL_CREATE, signal);\n    }\n  }\n}\n\nexport const RunnerScaleSignalContext =\n  createContext<RunnerScaleSignalContextType>(\n    new RunnerScaleSignalContextType(),\n  );\n\nexport type RunnerScaleSignalProviderProps = {\n  children: React.ReactNode;\n};\n\nexport const RunnerScaleSignalProvider = ({\n  children,\n}: RunnerScaleSignalProviderProps) => {\n  return (\n    <RunnerScaleSignalContext.Provider\n      value={new RunnerScaleSignalContextType()}\n    >\n      {children}\n    </RunnerScaleSignalContext.Provider>\n  );\n};\n"],"names":["RunnerScaleSignalContextType","constructor","lastSent","Map","createScaleSignal","bind","getMapKey","signal","signalKey","taskSlug","mapKey","lastSentDate","get","now","Date","getTime","set","fetcher","Fetcher","post","RUNNER_SCALE_SIGNAL_CREATE","RunnerScaleSignalContext","createContext","RunnerScaleSignalProvider","children"],"mappings":";;;;;;;;;;AAWO,MAAMA,6BAA6B;AAAA,EAGxCC,cAAc;AAFNC;AAGDA,SAAAA,+BAAeC;AACpB,SAAKC,oBAAoB,KAAKA,kBAAkBC,KAAK,IAAI;AAAA,EAC3D;AAAA,EAEAC,UAAUC,QAA2B;AAC5BA,WAAAA,OAAOC,YAAY,MAAMD,OAAOE;AAAAA,EACzC;AAAA,EAEA,MAAML,kBAAkBG,QAA2B;AAC3CG,UAAAA,SAAS,KAAKJ,UAAUC,MAAM;AACpC,UAAMI,eAAe,KAAKT,SAASU,IAAIF,MAAM;AACvCG,UAAAA,0BAAUC;AAEZ,QAAA,CAACH,gBAAgB,IAAIG,KAAKD,IAAIE,YAAY,KAAK,GAAI,IAAIJ,cAAc;AAClET,WAAAA,SAASc,IAAIN,QAAQG,GAAG;AACvBI,YAAAA,UAAU,IAAIC;AACdD,YAAAA,QAAQE,KAAKC,4BAA4Bb,MAAM;AAAA,IACvD;AAAA,EACF;AACF;AAEO,MAAMc,2BACXC,8BACE,IAAItB,8BACN;AAMK,MAAMuB,4BAA4BA,CAAC;AAAA,EACxCC;AAC8B,MAAM;AAElC,SAAA,oBAAC,yBAAyB,UAAzB,EACC,OAAO,IAAIxB,6BAAAA,GAEVwB,SACH,CAAA;AAEJ;"}