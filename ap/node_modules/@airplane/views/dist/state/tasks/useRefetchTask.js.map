{"version":3,"file":"useRefetchTask.js","sources":["../../../src/state/tasks/useRefetchTask.ts"],"sourcesContent":["import { useQueryClient } from \"@tanstack/react-query\";\nimport { useCallback } from \"react\";\n\nimport {\n  getFullQuery,\n  getSlug,\n  RefetchQuery,\n  TaskQuery,\n} from \"components/query\";\n\n/**\n * Returns a function that refetches the provided task(s) in the background. Any code using these tasks\n * will be automatically updated when the refetch is complete.\n *\n * Tasks can be refetched by slug, slug + params, or by the task function.\n * If no params are provided, all tasks matching the slug or function will be refetched.\n *\n * @example\n * useRefetchTask()('my_task'); // Refetches all executions of `my_task` regardless of parameters.\n *\n * @example\n * useRefetchTask()({ slug: 'my_task', params: { id: 1 } }); // Refetches executions of `my_task` with `id` = 1.\n *\n * @example\n * useRefetchTask()({ fn: myTask }); // Refetches all executions of the `myTask` function.\n */\nexport const useRefetchTasks = () => {\n  const queryClient = useQueryClient();\n\n  const refetchTasks = useCallback(\n    (refetchTasks: RefetchQuery | RefetchQuery[]) => {\n      const refetches = Array.isArray(refetchTasks)\n        ? refetchTasks\n        : [refetchTasks];\n      refetches\n        .map((r) => getFullQuery(r as TaskQuery))\n        .map((q) => (q.params ? [getSlug(q), q.params] : [getSlug(q)]))\n        .forEach((key) => queryClient.invalidateQueries(key));\n    },\n    [queryClient],\n  );\n\n  return refetchTasks;\n};\n"],"names":["useRefetchTasks","queryClient","useQueryClient","refetchTasks","useCallback","refetches","Array","isArray","map","r","getFullQuery","q","params","getSlug","forEach","key","invalidateQueries"],"mappings":";;;AA0BO,MAAMA,kBAAkBA,MAAM;AACnC,QAAMC,cAAcC;AAEdC,QAAAA,eAAeC,YACnB,CAACD,kBAAgD;AAC/C,UAAME,YAAYC,MAAMC,QAAQJ,aAAY,IACxCA,gBACA,CAACA,aAAY;AACjBE,cACGG,IAAKC,CAAAA,MAAMC,aAAaD,CAAc,CAAC,EACvCD,IAAKG,CAAAA,MAAOA,EAAEC,SAAS,CAACC,QAAQF,CAAC,GAAGA,EAAEC,MAAM,IAAI,CAACC,QAAQF,CAAC,CAAC,CAAE,EAC7DG,QAASC,CAAQd,QAAAA,YAAYe,kBAAkBD,GAAG,CAAC;AAAA,EAAA,GAExD,CAACd,WAAW,CACd;AAEOE,SAAAA;AACT;"}