{"version":3,"file":"useTaskOrRunbookMutation.js","sources":["../../../src/state/tasks/useTaskOrRunbookMutation.ts"],"sourcesContent":["import { useMutation as useReactMutation } from \"@tanstack/react-query\";\nimport { useContext, useEffect, useState } from \"react\";\n\nimport { PERMISSIONS_GET } from \"client/endpoints\";\nimport {\n  executeRunbook,\n  ExecuteRunbookError,\n  ExecuteRunbookSuccess,\n  isExecuteRunbookError,\n} from \"client/executeRunbook\";\nimport {\n  DefaultOutput,\n  ParamValues,\n  DefaultParams,\n  executeTask,\n  ExecuteTaskSuccess,\n  ExecuteTaskError,\n  isExecuteTaskError,\n  executeTaskBackground,\n} from \"client/executeTask\";\nimport { Fetcher } from \"client/fetcher\";\nimport { FullMutation, RunbookFullMutation, getSlug } from \"components/query\";\nimport { RequestDialogContext } from \"components/requestDialog/RequestDialogProvider\";\nimport { MISSING_EXECUTE_PERMISSIONS_ERROR_PREFIX } from \"errors/formatErrors\";\nimport { RunnerScaleSignalContext } from \"state\";\n\nimport { useRefetchTasks } from \"./useRefetchTask\";\nimport {\n  RunbookMutationHookOptions,\n  RunbookMutationResult,\n} from \"./useRunbookMutation\";\nimport { MutationHookOptions, MutationResult } from \"./useTaskMutation\";\n\nexport type TaskOrRunbookMutationResult<\n  TParams extends ParamValues | undefined = DefaultParams,\n  TOutput = DefaultOutput,\n> =\n  | {\n      type: \"TASK\";\n      result: MutationResult<TParams, TOutput>;\n    }\n  | {\n      type: \"RUNBOOK\";\n      result: RunbookMutationResult<TParams>;\n    };\n\nexport type TaskOrRunbookFullMutation<\n  TParams extends ParamValues | undefined = DefaultParams,\n  TOutput = DefaultOutput,\n> =\n  | {\n      mutation: FullMutation<TParams, TOutput>;\n      type: \"TASK\";\n    }\n  | {\n      mutation: RunbookFullMutation<TParams>;\n      type: \"RUNBOOK\";\n    };\n\nexport const useTaskOrRunbookMutation = <\n  TParams extends ParamValues | undefined = DefaultParams,\n  TOutput = DefaultOutput,\n>(\n  mutation: TaskOrRunbookFullMutation<TParams, TOutput>,\n): TaskOrRunbookMutationResult<TParams, TOutput> => {\n  const [executedRunID, setExecutedRunID] = useState<string | undefined>();\n  const slug = getTaskOrRunbookSlug(mutation);\n  const { params, refetchTasks: refetchQuery } = mutation.mutation;\n\n  const refetchTasks = useRefetchTasks();\n  const requestDialogContext = useContext(RequestDialogContext);\n  const { createScaleSignal } = useContext(RunnerScaleSignalContext);\n\n  useEffect(() => {\n    async function warmupTask() {\n      if (mutation.type !== \"TASK\") {\n        return;\n      }\n      await createScaleSignal({\n        signalKey: \"views_warmup\",\n        expirationDurationSeconds: 300,\n        taskSlug: slug,\n      });\n    }\n    warmupTask();\n  }, [slug, mutation.type, createScaleSignal]);\n\n  const { data, error, isLoading, mutate } = useReactMutation<\n    ExecuteTaskSuccess<TOutput> | ExecuteRunbookSuccess,\n    ExecuteTaskError<TOutput> | ExecuteRunbookError,\n    | MutationHookOptions<TParams, TOutput>\n    | RunbookMutationHookOptions<TParams>\n    | undefined\n  >(\n    async (opts) => {\n      switch (mutation.type) {\n        case \"TASK\": {\n          setExecutedRunID(undefined);\n          const runID = await executeTaskBackground<TParams, TOutput>(\n            slug,\n            \"mutation\",\n            opts?.params ?? params,\n          );\n          if (typeof runID === \"object\") {\n            throw runID;\n          }\n          setExecutedRunID(runID);\n\n          const r = await executeTask<TParams, TOutput>(\n            slug,\n            \"mutation\",\n            opts?.params ?? params,\n            runID,\n          );\n          if (isExecuteTaskError<TOutput>(r)) {\n            throw r;\n          }\n          return r;\n        }\n        case \"RUNBOOK\": {\n          const r = await executeRunbook<TParams>(\n            slug,\n            \"mutation\",\n            opts?.params ?? params,\n          );\n          if (isExecuteRunbookError(r)) {\n            throw r;\n          }\n          return r;\n        }\n        default:\n          throw new Error(\"invalid mutation type\");\n      }\n    },\n    {\n      onSuccess: (result, opts) => {\n        switch (mutation.type) {\n          case \"TASK\": {\n            result = result as ExecuteTaskSuccess<TOutput>;\n            const taskOnSuccess =\n              (opts?.onSuccess as MutationHookOptions[\"onSuccess\"]) ??\n              mutation.mutation?.onSuccess;\n            taskOnSuccess?.(result.output, result.runID);\n            break;\n          }\n          case \"RUNBOOK\": {\n            result = result as ExecuteRunbookSuccess;\n            const runbookOnSuccess =\n              (opts?.onSuccess as RunbookMutationHookOptions[\"onSuccess\"]) ??\n              mutation.mutation?.onSuccess;\n            runbookOnSuccess?.(result.sessionID);\n            break;\n          }\n          default:\n            throw new Error(\"invalid mutation type\");\n        }\n\n        const refetch = opts?.refetchTasks ?? refetchQuery;\n        if (refetch) {\n          refetchTasks(refetch);\n        }\n      },\n      onError: async (e, opts) => {\n        if (\n          e.error.type === \"AIRPLANE_INTERNAL\" &&\n          e.error.message.startsWith(MISSING_EXECUTE_PERMISSIONS_ERROR_PREFIX)\n        ) {\n          // The user doesn't have permissions to execute this task/runbook.\n          // Check if they have permissions to request execution, and if so,\n          // show a dialog that allows them to request.\n          try {\n            const showRequestDialog = await shouldShowRequestDialog(\n              slug,\n              mutation.type,\n            );\n            if (showRequestDialog) {\n              // Show the request dialog and don't call error handlers.\n              requestDialogContext.setState({\n                params: opts?.params ?? params ?? {},\n                taskSlug: mutation.type === \"TASK\" ? slug : undefined,\n                runbookSlug: mutation.type === \"RUNBOOK\" ? slug : undefined,\n                opened: true,\n              });\n              return;\n            }\n          } catch (shouldShowReqErr) {\n            if (shouldShowReqErr instanceof Error) {\n              e.error.message = `${e.error.message} (error checking request permissions: ${shouldShowReqErr.message})`;\n            } else {\n              e.error.message = `${e.error.message} (error checking request permissions: ${shouldShowReqErr})`;\n            }\n          }\n        }\n\n        switch (mutation.type) {\n          case \"TASK\": {\n            const taskOnError =\n              (opts?.onError as MutationHookOptions[\"onError\"]) ??\n              mutation.mutation?.onError;\n            const err = e as ExecuteTaskError<TOutput>;\n            taskOnError?.(err.output, err.error, err.runID);\n            return e;\n          }\n          case \"RUNBOOK\": {\n            const runbookOnError =\n              (opts?.onError as RunbookMutationHookOptions[\"onError\"]) ??\n              mutation.mutation?.onError;\n            const err = e as ExecuteRunbookError;\n            runbookOnError?.(err.error, err.sessionID);\n            return e;\n          }\n          default:\n            throw new Error(\"invalid mutation type\");\n        }\n      },\n    },\n  );\n\n  switch (mutation.type) {\n    case \"TASK\": {\n      const taskData = data as ExecuteTaskSuccess<TOutput> | undefined;\n      const taskError = error as ExecuteTaskError<TOutput> | undefined;\n      return {\n        type: mutation.type,\n        result: {\n          output: taskData?.output ?? taskError?.output,\n          runID: executedRunID ?? taskData?.runID ?? taskError?.runID,\n          loading: isLoading,\n          mutate,\n          error: taskError?.error,\n        },\n      };\n    }\n    case \"RUNBOOK\": {\n      const sessionData = data as ExecuteRunbookSuccess | undefined;\n      const sessionError = error as ExecuteRunbookError | undefined;\n      return {\n        type: mutation.type,\n        result: {\n          sessionID: sessionData?.sessionID ?? sessionError?.sessionID,\n          loading: isLoading,\n          mutate,\n          error: sessionError?.error,\n        },\n      };\n    }\n  }\n};\n\nconst shouldShowRequestDialog = async (\n  slug: string,\n  mutationType: \"TASK\" | \"RUNBOOK\",\n): Promise<boolean> => {\n  if (mutationType === \"TASK\") {\n    const fetcher = new Fetcher();\n    const result = await fetcher.get<{\n      resource: Record<string, boolean>;\n    }>(PERMISSIONS_GET, {\n      task_slug: slug,\n      actions: [\"tasks.request_run\"],\n    });\n    if (result.resource[\"tasks.request_run\"]) {\n      return true;\n    }\n  } else if (mutationType === \"RUNBOOK\") {\n    const fetcher = new Fetcher();\n    const result = await fetcher.get<{\n      resource: Record<string, boolean>;\n    }>(PERMISSIONS_GET, {\n      runbook_slug: slug,\n      actions: [\"trigger_requests.create\"],\n    });\n    if (result.resource[\"trigger_requests.create\"]) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst getTaskOrRunbookSlug = <\n  TParams extends ParamValues | undefined = DefaultParams,\n>(\n  mutation: TaskOrRunbookFullMutation<TParams>,\n): string => {\n  switch (mutation.type) {\n    case \"TASK\":\n      return getSlug(mutation.mutation);\n    case \"RUNBOOK\":\n      return mutation.mutation.slug;\n    default:\n      throw new Error(\"invalid mutation type\");\n  }\n};\n"],"names":["useTaskOrRunbookMutation","mutation","executedRunID","setExecutedRunID","useState","slug","getTaskOrRunbookSlug","params","refetchTasks","refetchQuery","useRefetchTasks","requestDialogContext","useContext","RequestDialogContext","createScaleSignal","RunnerScaleSignalContext","useEffect","warmupTask","type","signalKey","expirationDurationSeconds","taskSlug","data","error","isLoading","mutate","useReactMutation","opts","undefined","runID","executeTaskBackground","r","executeTask","isExecuteTaskError","executeRunbook","isExecuteRunbookError","Error","onSuccess","result","taskOnSuccess","output","runbookOnSuccess","sessionID","refetch","onError","e","message","startsWith","MISSING_EXECUTE_PERMISSIONS_ERROR_PREFIX","showRequestDialog","shouldShowRequestDialog","setState","runbookSlug","opened","shouldShowReqErr","taskOnError","err","runbookOnError","taskData","taskError","loading","sessionData","sessionError","mutationType","fetcher","Fetcher","get","PERMISSIONS_GET","task_slug","actions","resource","runbook_slug","getSlug"],"mappings":"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"}