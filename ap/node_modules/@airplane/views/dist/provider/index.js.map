{"version":3,"file":"index.js","sources":["../../src/provider/index.tsx"],"sourcesContent":["import { NotificationsProvider } from \"@mantine/notifications\";\nimport * as React from \"react\";\n\nimport { ThemeProvider } from \"components\";\nimport { RequestDialogProvider } from \"components/requestDialog/RequestDialogProvider\";\nimport { getNPMPackageVersion } from \"getNPMPackageVersion\";\nimport { sendViewMessage } from \"message/sendViewMessage\";\nimport {\n  ComponentStateProvider,\n  QueryClientConfig,\n  QueryClientProvider,\n  RunnerScaleSignalProvider,\n} from \"state\";\n\ntype ViewProviderProps = {\n  children: React.ReactNode;\n  queryClientConfig?: QueryClientConfig;\n  /** A custom document where views themes should be mounted. Useful when mounting views in an iframe. */\n  themeContainerDocument?: Document;\n};\n\nconst disableQueryConfigRetries = (q: QueryClientConfig | undefined) => {\n  const queryClientConfig = q ?? {};\n  if (!queryClientConfig.defaultOptions) {\n    queryClientConfig.defaultOptions = {};\n  }\n  if (!queryClientConfig.defaultOptions.queries) {\n    queryClientConfig.defaultOptions.queries = {};\n  }\n  queryClientConfig.defaultOptions.queries.retry = false;\n  return queryClientConfig;\n};\n\nexport const ViewProvider = ({\n  children,\n  queryClientConfig,\n}: ViewProviderProps) => {\n  React.useEffect(() => {\n    const version = getNPMPackageVersion();\n    if (version) {\n      sendViewMessage({\n        type: \"view_init\",\n        version,\n      });\n    }\n  }, []);\n\n  return (\n    <ComponentStateProvider>\n      <QueryClientProvider\n        queryClientConfig={disableQueryConfigRetries(queryClientConfig)}\n      >\n        <ThemeProvider>\n          <NotificationsProvider position=\"bottom-right\">\n            <RequestDialogProvider>\n              <RunnerScaleSignalProvider>{children}</RunnerScaleSignalProvider>\n            </RequestDialogProvider>\n          </NotificationsProvider>\n        </ThemeProvider>\n      </QueryClientProvider>\n    </ComponentStateProvider>\n  );\n};\n"],"names":["disableQueryConfigRetries","q","queryClientConfig","defaultOptions","queries","retry","ViewProvider","children","React","useEffect","version","getNPMPackageVersion","type"],"mappings":";;;;;;;;;;AAqBA,MAAMA,4BAA4BA,CAACC,MAAqC;AAChEC,QAAAA,oBAAoBD,KAAK;AAC3B,MAAA,CAACC,kBAAkBC,gBAAgB;AACrCD,sBAAkBC,iBAAiB;EACrC;AACI,MAAA,CAACD,kBAAkBC,eAAeC,SAAS;AAC3BD,sBAAAA,eAAeC,UAAU;EAC7C;AACkBD,oBAAAA,eAAeC,QAAQC,QAAQ;AAC1CH,SAAAA;AACT;AAEO,MAAMI,eAAeA,CAAC;AAAA,EAC3BC;AAAAA,EACAL;AACiB,MAAM;AACvBM,QAAMC,UAAU,MAAM;AACpB,UAAMC,UAAUC;AAChB,QAAID,SAAS;AACK,sBAAA;AAAA,QACdE,MAAM;AAAA,QACNF;AAAAA,MAAAA,CACD;AAAA,IACH;AAAA,EACF,GAAG,CAAE,CAAA;AAGH,SAAA,oBAAC,0BACC,UAAC,oBAAA,qBAAA,EACC,mBAAmBV,0BAA0BE,iBAAiB,GAE9D,UAAA,oBAAC,eACC,EAAA,UAAA,oBAAC,yBAAsB,UAAS,gBAC9B,UAAC,oBAAA,uBAAA,EACC,UAAC,oBAAA,2BAAA,EAA2BK,SAAS,CAAA,GACvC,EAAA,CACF,EACF,CAAA,EAAA,CACF,EACF,CAAA;AAEJ;"}