import { dedent } from "ts-dedent";
import { convertResourceAliasToID } from "./builtins";
import { executeWithResources } from "../execute";
/**
 * A SQL query either returns a list of rows, where each row is typed by `TRow`
 * or it is a DDL query without a `RETURNING` clause. To type the latter case,
 * provide `QueryExecOutput` as `TRow`. For example:
 *
 * query<QueryExecOutput>(...): BuiltInRun<..., {Q1: {rows_affected: number}}>
 * query<{name: string}>(...): BuiltInRun<..., {Q1: {name: string}[]}>
 * @param sqlResource The alias or slug of the DB resource to query
 * @param query The SQL query to execute. Can be DDL or DML and can include multiple queries separated by semicolons. Multiple queries will be executed together as a transaction.
 * @param opts Additional configuration options
 */
// Uses a function so we can overload its signature.
// eslint-disable-next-line prefer-arrow/prefer-arrow-functions
export async function query(sqlResource, query, opts = {}) {
    let { args, transactionMode, client } = opts;
    transactionMode = transactionMode !== null && transactionMode !== void 0 ? transactionMode : "auto";
    return executeWithResources("airplane:sql_query", { query: dedent(query), queryArgs: args, transactionMode }, { db: convertResourceAliasToID(sqlResource) }, client);
}
