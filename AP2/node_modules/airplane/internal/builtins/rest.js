"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.request = void 0;
const builtins_1 = require("./builtins");
const execute_1 = require("../execute");
// eslint-disable-next-line @typescript-eslint/no-explicit-any
const request = async (restResource, method, path, opts = {}) => {
    var _a, _b, _c;
    const { headers, urlParams, retryFailures, client } = opts;
    if (opts.body && opts.formData) {
        throw new Error("Expected either body or formData: got both");
    }
    // Pick sane defaults for the body+type. If neither are set, defaults to ("raw", "").
    const bodyType = (_a = opts.bodyType) !== null && _a !== void 0 ? _a : (opts.formData ? "x-www-form-urlencoded" : typeof opts.body === "object" ? "json" : "raw");
    const body = (_b = opts.body) !== null && _b !== void 0 ? _b : (bodyType === "raw" ? "" : bodyType === "json" ? {} : null);
    const formData = (_c = opts.formData) !== null && _c !== void 0 ? _c : (bodyType === "x-www-form-urlencoded" || bodyType === "form-data" ? {} : null);
    return (0, execute_1.executeWithResources)("airplane:rest_request", {
        method,
        path,
        headers: headers !== null && headers !== void 0 ? headers : {},
        urlParams: urlParams !== null && urlParams !== void 0 ? urlParams : {},
        bodyType,
        body,
        formData,
        retryFailures: retryFailures !== null && retryFailures !== void 0 ? retryFailures : false,
    }, { rest: (0, builtins_1.convertResourceAliasToID)(restResource) }, client);
};
exports.request = request;
