"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.optionsToSchema = void 0;
const ts_dedent_1 = require("ts-dedent");
const slug_1 = require("./slug");
const params_serialized_1 = require("../params/params_serialized");
const isLabeledOption = (v) => {
    return typeof v === "object" && Object.prototype.hasOwnProperty.call(v, "value");
};
const optionsToSchema = (name, type, opts) => {
    var _a, _b;
    const options = (_a = opts.options) === null || _a === void 0 ? void 0 : _a.map((opt) => {
        if (isLabeledOption(opt)) {
            return { ...opt, value: (0, params_serialized_1.serializeParamValueSingle)(opt.value) };
        }
        return (0, params_serialized_1.serializeParamValueSingle)(opt);
    });
    const types = {
        boolean: "boolean",
        upload: "upload",
        date: "date",
        datetime: "datetime",
        configvar: "configvar",
        float: "float",
        integer: "integer",
        longtext: "string",
        shorttext: "string",
        sql: "string",
        json: "json",
    };
    const components = {
        longtext: "textarea",
        sql: "editor-sql",
    };
    return {
        slug: opts.slug || (0, slug_1.makeSlug)(name),
        name,
        type: types[type],
        component: components[type],
        constraints: {
            optional: opts.required === false ? true : false,
            options,
            regex: (_b = opts.regex) === null || _b === void 0 ? void 0 : _b.source,
        },
        desc: opts.description ? (0, ts_dedent_1.dedent)(opts.description) : undefined,
        default: (0, params_serialized_1.serializeParamValue)(opts.default, opts.multi),
    };
};
exports.optionsToSchema = optionsToSchema;
